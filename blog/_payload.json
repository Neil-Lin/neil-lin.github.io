[{"data":1,"prerenderedAt":120},["ShallowReactive",2],{"I3YPfiqfqc":3},{"status":4,"feed":5,"items":11},"ok",{"url":6,"title":7,"link":8,"author":9,"description":7,"image":10},"https://medium.com/feed/@neil-lin","Stories by Neil on Medium","https://medium.com/@neil-lin?source=rss-dab4275321b------2","","https://cdn-images-1.medium.com/fit/c/150/150/1*-vHo6JSOXqEJ0dly1rpnFA.png",[12,26,34,46,57,66,75,85,97,108],{"title":13,"pubDate":14,"link":15,"guid":16,"author":17,"thumbnail":9,"description":18,"content":18,"enclosure":19,"categories":20},"Building Accesserty — An Accessibility Experience from Search to Development","2025-05-23 10:14:53","https://neil-lin.medium.com/building-accesserty-an-accessibility-experience-from-search-to-development-ea7ef4ad4b8b?source=rss-dab4275321b------2","https://medium.com/p/ea7ef4ad4b8b","Neil","\n\u003Ch3>Building Accesserty — An Accessibility Experience from Search to Development\u003C/h3>\n\u003Cp>How a solo developer used AI and empathy to create an accessibility toolchain\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*SIyD22s4QBA_pbfSYyQp4w.avif\">\u003Cfigcaption>Accesserty Brand\u003C/figcaption>\u003C/figure>\u003Cp>\u003Ca href=\"https://medium.com/@neil-lin/c8af31aff07e\">中文版\u003C/a>\u003C/p>\n\u003Cp>Today, I’d like to share the story behind \u003Cstrong>Accesserty\u003C/strong>, a small product ecosystem I built in about a month, aimed at improving the accessible web experience. From the moment users search to the moment developers build, I wanted to offer a calm, practical set of tools to make accessibility visible, understandable, and actionable.\u003C/p>\n\u003Ch3>Origin: Curiosity about Chrome Extensions\u003C/h3>\n\u003Cp>Back in 2023, I created my first Chrome extension — \u003Ca href=\"https://chrome.google.com/webstore/detail/report-website-issues/ligflmchialjgapdcgadgibgkabckglh\">Report Website Issues\u003C/a> — simply out of curiosity.\u003C/p>\n\u003Cp>\u003Ca href=\"https://neil-lin.medium.com/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E5%80%8B-chrome-%E7%80%8F%E8%A6%BD%E5%99%A8%E6%93%B4%E5%85%85%E7%A8%8B%E5%BC%8F-report-website-issues-84c1b1a8668c\">我的第一個 Chrome 瀏覽器擴充程式：Report Website issues\u003C/a>\u003C/p>\n\u003Cp>Now in 2025, with the rise of large language models (LLMs), I began thinking about how AI might help me build tools that address real-world accessibility challenges.\u003C/p>\n\u003Cp>I experimented with assigning LLMs different “roles” — product manager, frontend dev, accessibility analyst — and used them to speed up system design and implementation.\u003C/p>\n\u003Ch3>Identifying the Problems\u003C/h3>\n\u003Ch4>1. After searching, users still don’t know which link to click\u003C/h4>\n\u003Cp>Search engines consider SEO, performance, and content, but that doesn’t mean the top results are easy to use — especially for people who rely on keyboard navigation or screen readers.\u003C/p>\n\u003Cp>Sites may appear technically sound but be visually cluttered, hard to navigate, or inaccessible by design.\u003Cbr> So I started wondering:\u003C/p>\n\u003Cp>\u003Cstrong>What if I could see how accessible a site is — right from the search result list?\u003C/strong>\u003C/p>\n\u003Cp>It would save time, reduce frustration, and help everyone make more informed choices.\u003C/p>\n\u003Ch4>2. Users often have no way to report issues\u003C/h4>\n\u003Cp>Even if a user encounters a serious accessibility problem, it’s often unclear how to report it — or if it will even be taken seriously.\u003C/p>\n\u003Cp>Worse, communication gaps happen. Like in a case I mentioned in an earlier post:\u003C/p>\n\u003Cblockquote>\u003Cem>A user says: “I can’t browse your site using the keyboard.”\u003Cbr> A support rep replies: “It works fine for me — maybe try again?”\u003Cbr> But they’re talking about different things. One refers to keyboard focus logic; the other is just pressing the down arrow key. They both get frustrated.\u003C/em>\u003C/blockquote>\n\u003Cp>So I realized there needs to be a “bridge” — someone or something that helps users explain issues clearly and helps developers receive usable feedback.\u003Cbr> Right now, LLMs might help with summarization, but the cost and accuracy are still limiting.\u003C/p>\n\u003Ch4>3. Is accessibility really expensive for developers?\u003C/h4>\n\u003Cp>With recent EU regulations, many UI frameworks now include more accessible components — that’s progress.\u003Cbr> But passing machine audits isn’t enough.\u003C/p>\n\u003Cp>\u003Cem>Compliance ≠ usability.\u003C/em>\u003C/p>\n\u003Cp>Take text, for instance. A machine can check if it’s there —\u003Cbr> but only a human can tell if it actually describes the image meaningfully in context.alt\u003C/p>\n\u003Cp>Even if LLMs could generate decent descriptions, that still involves API costs, image parsing, and prompt design — not to mention hallucination risks.\u003C/p>\n\u003Cp>That led me to a fundamental insight:\u003C/p>\n\u003Cblockquote>The earlier you address accessibility, the lower the cost.\u003C/blockquote>\n\u003Cp>From planning to design to engineering, everyone needs to be aligned early.\u003Cbr>This diagram sums it up well:\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/936/1*cVw-h1vd4Oqc8BrbGPc3xA.png\">\u003Cfigcaption>Source: Is Closing the Web Accessibility Design/Development Gap a Bridge Too Far? \u003Ca href=\"https://www.deque.com/blog/is-closing-the-web-accessibility-design-development-gap-a-bridge-too-far/\">https://www.deque.com/blog/is-closing-the-web-accessibility-design-development-gap-a-bridge-too-far/\u003C/a>\u003C/figcaption>\u003C/figure>\u003Ch3>Solutions: Simulate, Detect, Report\u003C/h3>\n\u003Cp>Based on these observations, I created a journey map to visualize the pain points across users, developers, and site owners.\u003C/p>\n\u003Ca href=\"https://medium.com/media/f80e0fbe08da3787a654a3666baef43f/href\">https://medium.com/media/f80e0fbe08da3787a654a3666baef43f/href\u003C/a>\u003Cp>I divided the process into two phases:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cstrong>Prevention\u003C/strong> — Help build accessibility in early\u003C/li>\n\u003Cli>\n\u003Cstrong>Remediation\u003C/strong> — Identify and fix real-world issues through feedback\u003C/li>\n\u003C/ul>\n\u003Cp>The goal: a sustainable feedback loop where everyone benefits.\u003C/p>\n\u003Ch3>Building the Accesserty Brand\u003C/h3>\n\u003Cp>Many a11y tools try to scare developers into action — with stories of lawsuits or million-dollar fines.\u003C/p>\n\u003Cp>I didn’t want to do that.\u003Cbr>Instead, I wanted to design something that felt \u003Cstrong>rational, respectful, and constructive\u003C/strong>.\u003C/p>\n\u003Cp>So with help from my “product manager” (aka ChatGPT 😎), I defined Accesserty’s brand principles:\u003C/p>\n\u003Cp>We aim to be…\u003Cstrong>Calm, clear, transparent, inclusive\u003C/strong>\u003C/p>\n\u003Cp>And we avoid…\u003Cstrong>Fear-driven messaging, tokenism, accessibility as an afterthought\u003C/strong>\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Z14tBChoEsgMU1wsRjk44A.png\">\u003Cfigcaption>I even used ChatGPT’s new project folder mode to keep a shared background doc, flowcharts, and multiple conversations — as if working with a real team.\u003C/figcaption>\u003C/figure>\u003Cp>With the structure aligned, I started coding the actual tools — one by one — with the help of Chrome Extension, Web Components, AppSheet, and some Vibe Coding.\u003C/p>\n\u003Ch3>The Accesserty Ecosystem\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-signal/jabgpbgdmhdmibhogmcjfinnkcngcelc\">\u003Cstrong>Accesserty Signal\u003C/strong>\u003C/a>\u003Cbr> See accessibility status directly in Google Search\u003C/li>\n\u003Cli>\n\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-devcheck/ompbhahmipenipgiiiehbkiibkonoeec?pli=1\">\u003Cstrong>Accesserty DevCheck\u003C/strong>\u003C/a>\u003Cbr> Simulate vision impairments, detect violations (e.g., color blindness, alt text, heading issues)\u003C/li>\n\u003Cli>\n\u003Ca href=\"https://github.com/Accesserty/UI-Kit\">\u003Cstrong>Accesserty UI Kit\u003C/strong>\u003C/a>\u003Cbr> Build with accessible Web Components from day one\u003C/li>\n\u003Cli>\n\u003Cstrong>Accesserty Console\u003C/strong>\u003Cbr> An AppSheet-based CRM to manage feedback, assign issues, and close the loop\u003C/li>\n\u003C/ul>\n\u003Cp>Built solo, with AI as a thought partner, and designed for low-maintenance sustainability.\u003C/p>\n\u003Ch3>Launched on GAAD 🎉\u003C/h3>\n\u003Cp>I chose to launch Accesserty on \u003Cstrong>Global Accessibility Awareness Day (GAAD)\u003C/strong> — \u003Cbr>the third Thursday of May, every year.\u003C/p>\n\u003Cp>You can find it on Product Hunt here:\u003Cbr> 👉 \u003Ca href=\"https://www.producthunt.com/posts/accesserty\">Accesserty on Product Hunt\u003C/a>\u003C/p>\n\u003Ca href=\"https://medium.com/media/70a825e44a04dea081e0e037488e66be/href\">https://medium.com/media/70a825e44a04dea081e0e037488e66be/href\u003C/a>\u003Cp>My hope is that this helps show:\u003C/p>\n\u003Cblockquote>You don’t need a big team or budget to make the web more accessible.\u003Cbr>With the right mindset and tools, transparency and improvement can happen — at scale, and with care.\u003C/blockquote>\n\u003Cp>If you’ve ever felt unsure which site to trust when searching, or if you’ve ever hit an accessibility wall and had nowhere to report it — \u003Cbr>Accesserty was built for you.\u003C/p>\n\u003Cp>I’d love to hear your thoughts, feedback, or even ideas for collaboration.\u003C/p>\n\u003Ch3>Related Links\u003C/h3>\n\u003Cp>\u003Ca href=\"https://accessibility.day/\">GAAD\u003C/a>\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ea7ef4ad4b8b\" width=\"1\" height=\"1\" alt=\"\">\n",{},[21,22,23,24,25],"product-hunt","chrome-extension","solo-founder","accessibility","webdev",{"title":27,"pubDate":28,"link":29,"guid":30,"author":17,"thumbnail":9,"description":31,"content":31,"enclosure":32,"categories":33},"打造 Accesserty — 從搜尋到開發的無障礙網頁之體驗","2025-05-23 09:56:05","https://neil-lin.medium.com/%E6%89%93%E9%80%A0-accesserty-%E5%BE%9E%E6%90%9C%E5%B0%8B%E5%88%B0%E9%96%8B%E7%99%BC%E7%9A%84%E7%84%A1%E9%9A%9C%E7%A4%99%E7%B6%B2%E9%A0%81%E4%B9%8B%E9%AB%94%E9%A9%97-c8af31aff07e?source=rss-dab4275321b------2","https://medium.com/p/c8af31aff07e","\n\u003Ch3>打造 Accesserty — 從搜尋到開發的無障礙網頁之體驗\u003C/h3>\n\u003Cp>一位獨立開發者如何用 AI 和同理心建立完整無障礙工具鏈\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*SIyD22s4QBA_pbfSYyQp4w.avif\">\u003Cfigcaption>Accesserty 品牌與旗下產品\u003C/figcaption>\u003C/figure>\u003Cp>\u003Ca href=\"https://neil-lin.medium.com/ea7ef4ad4b8b\">English Version\u003C/a>\u003C/p>\n\u003Cp>今天想分享我花了一個月左右打造的新品牌：\u003Cstrong>Accesserty\u003C/strong>\u003C/p>\n\u003Cp>這是一個專注於提升無障礙網頁體驗的小型工具生態，從搜尋體驗到開發測試，試圖用一套溫和、理性的方式，讓這件事被看見、被理解、被改善。\u003C/p>\n\u003Ch3>起點：對於 Chrome Extension 的好奇\u003C/h3>\n\u003Cp>在 2023 年時，我出於對 Chrome Extension 的好奇，製作了名為 \u003Ca href=\"https://chrome.google.com/webstore/detail/report-website-issues/ligflmchialjgapdcgadgibgkabckglh\">\u003Cstrong>Report Website Issues\u003C/strong> 的擴充程式\u003C/a>，並分享開發過程。\u003C/p>\n\u003Cp>\u003Ca href=\"https://neil-lin.medium.com/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E5%80%8B-chrome-%E7%80%8F%E8%A6%BD%E5%99%A8%E6%93%B4%E5%85%85%E7%A8%8B%E5%BC%8F-report-website-issues-84c1b1a8668c\">我的第一個 Chrome 瀏覽器擴充程式：Report Website issues\u003C/a>\u003C/p>\n\u003Cp>到了 2025 年，隨著大型語言模型（LLM）的普及，我開始思考能否用它來輔助開發更多可實際解決問題的工具，並設法用 LLM 拆分出角色，幫助我在短時間內建構出一個有邏輯又能運作的產品系統。\u003C/p>\n\u003Ch3>發現問題與痛點\u003C/h3>\n\u003Ch4>1. 搜尋後，使用者其實不知道該點哪個連結\u003C/h4>\n\u003Cp>搜尋引擎雖然會綜合 SEO、速度、內容等因素排序網頁，但這些排序結果\u003Cstrong>並不代表網站「好用」或「易於瀏覽」\u003C/strong>。\u003Cbr>許多網站看似在技術層面表現良好，實際上卻充斥著鍵盤操作困難、結構不明、廣告覆蓋等問題，特別是對使用輔助科技的使用者而言。\u003C/p>\n\u003Cp>我開始思考：\u003Cstrong>能不能在搜尋時就直接看到這個網站的可及性狀況？\u003C/strong>避免來回點選、浪費時間與耐心，讓瀏覽過程更順暢。\u003C/p>\n\u003Ch4>2. 使用者想回報問題，卻「無門可報」\u003C/h4>\n\u003Cp>即使使用者發現網站有困難，也常因為找不到聯絡方式、或無法準確描述問題而選擇放棄。\u003C/p>\n\u003Cp>更常見的是客服和使用者之間「認知不同」，像是這個我在之前文章中提到的例子：\u003C/p>\n\u003Cblockquote>例如使用者說「我的鍵盤沒辦法瀏覽你們的網頁」，但客服卻說「我的可以喔，麻煩您再試試」，然後差不多就鬼打牆，兩邊都覺得對方很爛，因為前者是談鍵盤焦點，後者可能只是按向下鍵捲動畫面。\u003C/blockquote>\n\u003Cp>因此我認為需要有一個「中介層」：讓使用者能輕鬆描述問題，讓開發者收到後是可解讀、可處理的資訊。\u003Cbr>目前 LLM 雖然可以協助，但仍難以精確理解這類回報或是成本太高。\u003C/p>\n\u003Ch4>3. 對開發者而言，無障礙是高成本嗎？\u003C/h4>\n\u003Cp>近年因應歐盟無障礙相關法規，各大 UI 框架陸續強化了可及性元件，的確減少了開發成本。\u003Cbr>但僅靠機器掃描是否合規遠遠不夠 — — 因為「合規」≠「可用」。\u003C/p>\n\u003Cp>舉例來說：一張圖片是否有 alt 屬性，機器可以檢查；但這個 alt 的內容是否正確傳達圖片意義？還是只有寫「圖片1」？這仍需要人來判斷。\u003C/p>\n\u003Cp>目前即使 LLM 可以做初步描述，也需要 API 費用與極高 prompt 精度，而且幻覺仍是風險。\u003C/p>\n\u003Cp>所以更務實的方式是 — — 在開發過程就提供人工判斷的機會與工具。\u003C/p>\n\u003Cp>這就延伸出一個核心概念：\u003C/p>\n\u003Cblockquote>\n\u003Cstrong>\u003Cem>越早期處理可及性問題，成本越低\u003C/em>\u003C/strong>\u003Cem>。\u003Cbr>從規劃階段讓分析師、設計師、工程師一起考慮無障礙，而不是事後補強。\u003C/em>\n\u003C/blockquote>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/936/1*cVw-h1vd4Oqc8BrbGPc3xA.png\">\u003Cfigcaption>越早注意無障礙，成本月低。圖片來源： Is Closing the Web Accessibility Design/Development Gap a Bridge Too Far? \u003Ca href=\"https://www.deque.com/blog/is-closing-the-web-accessibility-design-development-gap-a-bridge-too-far/\">https://www.deque.com/blog/is-closing-the-web-accessibility-design-development-gap-a-bridge-too-far/\u003C/a>\u003C/figcaption>\u003C/figure>\u003Ch3>解法開始成形：模擬、檢查、回報\u003C/h3>\n\u003Cp>基於上述問題，我開始構思一個流程圖，來整理使用者、開發者、合作方之間的互動關係：\u003C/p>\n\u003Ca href=\"https://medium.com/media/f80e0fbe08da3787a654a3666baef43f/href\">https://medium.com/media/f80e0fbe08da3787a654a3666baef43f/href\u003C/a>\u003Cp>我將整體劃分為「預防」與「治療」兩大塊，並嘗試建立一套工具組合，來落實這個想法，完成良好的循環過程達成 Win-Win 的結果。\u003C/p>\n\u003Ch3>建立 Accesserty 品牌與產品結構\u003C/h3>\n\u003Cp>很多 a11y 工具會在電子報宣傳「某公司被罰了多少錢」，我覺得那會讓開發者只想「應付一下」，而不是真的想理解與改善。\u003Cbr>所以我與「我的產品經理」（ChatGPT 😎）對話後，確立了品牌核心：\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*YCDN6i3S56epRFj_CFB5hw.png\">\u003Cfigcaption>品牌語氣：冷靜、理性、透明、參與感強；不做的事：不標籤化、不威脅、不灌分、不做障礙者專屬版本；做的事：對齊通用設計、鼓勵主動改善、打造正向反饋機制\u003C/figcaption>\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Z14tBChoEsgMU1wsRjk44A.png\">\u003Cfigcaption>我發現 ChatGPT 現在可以幫我建立「專案資料夾」的模式。 \u003Cbr>我可以先給它一份專案的背景說明，然後針對不同專業角色，分別開啟對話，例如設計師、工程師、開發者。 \u003Cbr>像我就會把流程圖截圖放進專案中，再從這個共同檔案延伸出多個角色視角。\u003C/figcaption>\u003C/figure>\u003Cp>等到跟「產品經理」確定各種細節之後，便開啟其他三個專家：AppSheet、Chrome Extension、Web Component，利用 Vibe Coding 的方式，將產品產生出來。架構如下：\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-signal/jabgpbgdmhdmibhogmcjfinnkcngcelc\">\u003Cstrong>Accesserty Signal\u003C/strong>\u003C/a> — 讓 Google 搜尋結果顯示網頁可及性狀態\u003C/li>\n\u003Cli>\n\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-devcheck/ompbhahmipenipgiiiehbkiibkonoeec?pli=1\">\u003Cstrong>Accesserty DevCheck\u003C/strong>\u003C/a> — 模擬無障礙情境與自動檢查問題（如色盲模擬、Axe-core devtool 等）\u003C/li>\n\u003Cli>\n\u003Ca href=\"https://github.com/Accesserty/UI-Kit\">\u003Cstrong>Accesserty UI Kit\u003C/strong> \u003C/a>— 提供通過可及性設計的 Web Component 元件\u003C/li>\n\u003Cli>\n\u003Cstrong>Accesserty Console\u003C/strong> — 用 AppSheet 建立的後台系統，處理使用者回報與 issue 派送\u003C/li>\n\u003C/ul>\n\u003Cp>整體系統皆由我一人開發，搭配 ChatGPT 輔助，以最低維運成本打造。\u003C/p>\n\u003Ch3>發佈與展望\u003C/h3>\n\u003Cp>今年的 GAAD（Global Accessibility Awareness Day）這天(每年五月的第三個星期四)，在 Product Hunt 上發佈了：\u003Cbr>\u003Cbr>Accesserty on Product Hunt\u003Cbr>\u003Ca href=\"https://www.producthunt.com/posts/accesserty\">https://www.producthunt.com/posts/accesserty\u003C/a>\u003C/p>\n\u003Ca href=\"https://medium.com/media/70a825e44a04dea081e0e037488e66be/href\">https://medium.com/media/70a825e44a04dea081e0e037488e66be/href\u003C/a>\u003Cp>希望讓更多人知道，\u003Cstrong>改善無障礙，不一定需要複雜的團隊與大量預算\u003C/strong>。\u003Cbr>只要設計得當、工具使用得當，從搜尋、開發到回報，其實都可以是透明且正向的。\u003C/p>\n\u003Cp>如果你也是在意這個議題，或者你在瀏覽網站時也曾有過「不知道要點哪個」的猶豫，歡迎看看 Accesserty。\u003C/p>\n\u003Cp>如果你也曾在使用網站時感到困擾，希望這套產品能帶來一些幫助。歡迎在這篇文章下留言告訴我你的想法，也很期待未來合作或改進的可能！\u003C/p>\n\u003Ch3>相關連結\u003C/h3>\n\u003Cp>\u003Ca href=\"https://accessibility.day/\">GAAD\u003C/a>\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=c8af31aff07e\" width=\"1\" height=\"1\" alt=\"\">\n",{},[22,21,23,24,25],{"title":35,"pubDate":36,"link":37,"guid":38,"author":17,"thumbnail":9,"description":39,"content":39,"enclosure":40,"categories":41},"LLM Chat Accessibility","2025-04-16 06:33:19","https://neil-lin.medium.com/llm-chat-accessibility-a606d8dc7ddf?source=rss-dab4275321b------2","https://medium.com/p/a606d8dc7ddf","\n\u003Cp>因為很好奇，所以想檢測一下主流 LLM Chat 工具在無障礙上的支援程度\u003C/p>\n\u003Cp>隨著歐盟的無障礙法規到來，我實在是很好奇最近幾年新出現的 LLM Chatbot 是否能通過無障礙，於是就隨意挑選三個 LLM 記錄一下 2025 目前的狀況。（如果過不了還能在歐盟的國家使用嗎？真是疑惑。）\u003C/p>\n\u003Ch3>機器掃描\u003C/h3>\n\u003Ch4>1. 選擇當作基準的測試工具\u003C/h4>\n\u003Cp>本來是想簡單一點用 Chrome Devtool 的 Lighthouse ，但會被 Grok 一直擋在機器人檢測的頁面，所以本次選擇 \u003Ca href=\"https://chromewebstore.google.com/detail/ibm-equal-access-accessib/lkcagbfjnkomcinoddgooolagloogehp\">IBM Equal Access Accessibility Checker\u003C/a> 的 Chrome Extension 來測試，會選擇的原因是此款擴充程式一來持續在更新，再者可以根據需求選擇檢測規則。\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"IBM Equal Access Accessibility Checker 提供的檢測模式\" src=\"https://cdn-images-1.medium.com/max/1024/1*HdPSAdHnBlp2Rfkl20OdxQ.png\">\u003Cfigcaption>共有五種選擇，其中三種為 WCAG 2.0, 2.1, 2.2 的 A 與 AA 級，其他兩種為 2.1 和 2.2 各自加上IBM 的額外補充。\u003C/figcaption>\u003C/figure>\u003Ch4>2. 在未登入的情況下進行測試\u003C/h4>\n\u003Cp>因為登入之後可能會因為資料的不同造成差異，所以要以未登入的狀態開始\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*kmfAmCYirMJeTLughmAiYg.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*-KlSW5g1fRHuDppZlYGWjA.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*gzwvHbfI92jxU4Erj4aDVQ.png\">\u003Cfigcaption>雖然三者首頁有不盡相同，但在聊天的主要視窗大致上是一樣的\u003C/figcaption>\u003C/figure>\u003Ch4>3. 機器檢測簡易結果\u003C/h4>\n\u003Cp>報告明細會區分三種等級，而每個等級又分成：\u003C/p>\n\u003Cp>Violation：明確的違規\u003Cbr>Needs review：需要人工近一步檢視\u003Cbr>Recommendation：工具建議的做法\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*HXdLoWTYGWaCVXSALeGmpA.png\">\u003Cfigcaption>左起 ChatGPT、Gemini、Grok，以簡單的數字來看，Gemini 表現相較優異。\u003C/figcaption>\u003C/figure>\u003Cp>可以看到在總數上三者並無太大差別，但是在 Violation 方面，Gemini 就相較優異，至少有明顯在程式上處理無障礙，其中 Violation 的部分看起來都是 &lt;svg&gt; 沒有標記描述之類的。\u003C/p>\n\u003Cp>當然，這樣的機器檢測並不能代表什麼，因為在有些情況下，原本可以使用機器掃描辨別的，可能會因為使用的技術太新或其他原因，導致無法辨別。(例如背景與前景顏色的對比)\u003C/p>\n\u003Cp>所以應該說，連這個都不能通過的話，那就也不需要進一步人工檢測了。\u003C/p>\n\u003Cp>此階段個人認為 Gemini &gt; ChatGPT = Grok\u003C/p>\n\u003Ch3>人工檢測\u003C/h3>\n\u003Cp>開啟作業系統報讀軟體做看看人工檢測以下任務：\u003C/p>\n\u003Col>\n\u003Cli>在首頁輸入問題至聽到回覆結果，並觀察網頁回饋的行為\u003C/li>\n\u003Cli>鍵盤遊走\u003C/li>\n\u003Cli>accesskey\u003C/li>\n\u003Cli>標題規則檢測\u003C/li>\n\u003Cli>人工顏色檢測\u003C/li>\n\u003Cli>Landmark\u003C/li>\n\u003Cli>跳至主要內容按鈕\u003C/li>\n\u003Cli>&lt;noscript&gt;\u003C/li>\n\u003Cli>其他問題\u003C/li>\n\u003C/ol>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*fiS8NikfeX256vNm5tBe6Q.png\">\u003C/figure>\u003Cp>在人工檢測的部分，三者在顏色方面都差不多，保持著簡單的黑色簡單的介面，可惜的是都沒有設定 accesskey，不確定是不需要還是沒有設定。Landmark 也因為是簡單的介面，所以基本都只有 main 而已，感覺應該可以再拆分得更細緻一點。\u003C/p>\n\u003Cp>禁用 js 的情況下，只有 ChatGPT 有顯示畫面，其他兩者都是空白，但即便是有顯示畫面，但是沒有提示使用者可能無法操作，可能會造成更多困擾。\u003C/p>\n\u003Cp>在實際操作 AI 對話的方面，我個人更喜歡 ChatGPT，雖然在鍵盤遊走的部分會有順序不一致的問題，但因為很多動作做完都是回去 Focus 在輸入框，所以倒還好。另外我覺得 Gemini 優於 Grok，因為畢竟是 chatbot ，個人覺得「回覆的狀態」還是最重要的，即便是沒有直接報讀回覆的內容。\u003C/p>\n\u003Ch4>結論\u003C/h4>\n\u003Cp>三者在機器掃描的結果上，Gemini 勝出，但在人工檢測上， ChatGPT 勝出。如果硬要分勝負，我個人覺得 ChatGPT 整體是比較好的，畢竟在主要功能的操作上是非常順暢的，這才是最重要的。\u003C/p>\n\u003Cp>但三者應該都達不到歐盟的標準，所以我很期待之後會有什麼樣的發展。\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=a606d8dc7ddf\" width=\"1\" height=\"1\" alt=\"\">\n",{},[42,43,44,45,24],"user-experience","ai","chatbots","llm",{"title":47,"pubDate":48,"link":49,"guid":50,"author":17,"thumbnail":9,"description":51,"content":51,"enclosure":52,"categories":53},"建立所見即所得編輯器的無障礙檢測工具，以 TinyMCE 為例","2025-01-01 04:06:53","https://neil-lin.medium.com/%E5%BB%BA%E7%AB%8B%E6%89%80%E8%A6%8B%E5%8D%B3%E6%89%80%E5%BE%97%E7%B7%A8%E8%BC%AF%E5%99%A8%E7%9A%84%E7%84%A1%E9%9A%9C%E7%A4%99%E6%AA%A2%E6%B8%AC%E5%B7%A5%E5%85%B7-%E4%BB%A5-tinymce-%E7%82%BA%E4%BE%8B-cd450b372ccd?source=rss-dab4275321b------2","https://medium.com/p/cd450b372ccd","\n\u003Cp>一個小程式，幫助撰文者製作符合無障礙網頁規範的文章\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"TinyMCE 所見即所得編輯器自製無障礙規範工具範例圖檔\" src=\"https://cdn-images-1.medium.com/max/836/1*D7X0hUoflB66cY3IvvHa0A.png\">\u003Cfigcaption>以 TinyMCE 為例，建立小工具檢測文章內容是否符合無障礙規範\u003C/figcaption>\u003C/figure>\u003Ch3>情境\u003C/h3>\n\u003Cp>一間企業幫助政府單位架設內容管理系統網站，文章編輯需要使用所見即所得編輯器的高度自由，又要全網站符合無障礙網頁規範。\u003C/p>\n\u003Ch3>痛點\u003C/h3>\n\u003Cp>即使有無障礙網頁知識，但只要碰到所見即所得(WYSIWYG)編輯器，網站建立後的文章內容便不再受控。\u003C/p>\n\u003Cp>企業：\u003Cbr>1. 每當網站被抽測時，就需要花費大量時間幫助業主修復。\u003Cbr>2. 程式需要特別限制必填欄位，但是有點填鴨式，例如 &lt;a&gt; 在某些情況下，不需要有 title 屬性。\u003Cbr>3. 額外提供寫作的教育訓練。\u003C/p>\n\u003Cp>撰文者：\u003Cbr>1. 如果企業的編輯器有特別限制必填，則一定要填寫欄位，否則無法儲存。\u003Cbr>2. 不暸解該欄位意義，於是可能流於表象的填寫，對無障礙網頁沒有真正意義上的幫助，例如圖片 alt 的描述可能會比較模糊。\u003Cbr>3. 被抽測時，文章沒通過無障礙的機率非常高，就只能等待企業修復。\u003C/p>\n\u003Ch3>解決方案\u003C/h3>\n\u003Ch4>\u003Cstrong>打造一個編輯器內工具\u003C/strong>\u003C/h4>\n\u003Col>\n\u003Cli>撰寫文章時可以即時檢測無障礙網頁規則。\u003C/li>\n\u003Cli>提供該無障礙網頁錯誤的撰寫提示，每次錯誤時，撰文者可以學習一些無障礙網頁規範。\u003C/li>\n\u003Cli>錯誤提示提供視覺化顯示，例如圖片錯誤的話，應顯示該圖片，並且點擊後可以將滑鼠鼠標移動到錯誤的位置。\u003C/li>\n\u003Cli>使用者點擊檢測按鈕時觸發，或是自動即時檢測，但是不能直接跳出錯誤一直干擾撰文者編寫流程，只需要在按鈕文字後加上錯誤數量和改變顏色。例如，當錯誤在 5 個以下，按鈕文字顯示黃色，10 個以上就變成紅色，以提醒撰文者不要累積太多錯誤再更改，但也不打擾寫作。\u003C/li>\n\u003Cli>建立指標，例如通過是 100 分，沒通過就按比例顯示分數。\u003Cbr>可利用遊戲化方式，鼓勵撰文者學習。\u003C/li>\n\u003Cli>即使有錯誤，但仍然讓使用者可以儲存，儲存後在列表和檢測按鈕裡，有警告 icon 提示該文章尚未完成無障礙檢測。\u003C/li>\n\u003C/ol>\n\u003Ch3>實作：以 TinyMCE 為例\u003C/h3>\n\u003Ca href=\"https://medium.com/media/f5e61f2f8db14e4deea9583a17bfd9b2/href\">https://medium.com/media/f5e61f2f8db14e4deea9583a17bfd9b2/href\u003C/a>\u003Ch4>思路\u003C/h4>\n\u003Col>\n\u003Cli>制定格式、寫一次規則後，此格式的程式碼，可以輕易的在不同所見即所得編輯器中製作成外掛，才會更能推廣。\u003C/li>\n\u003Cli>無障礙網頁規則通常只會新增的比較多，修正比較少，所以當規則第一次寫好後，維護不至於太困難，所以開發者負擔應該不會太多。\u003C/li>\n\u003Cli>先以常見錯誤開發，先解決常見問題，再制定更細部規則。\u003C/li>\n\u003Cli>\n\u003Cstrong>要注意編輯器先天限制\u003C/strong>，假設編輯器本身圖片沒有給 alt 欄位，這時候即便您有檢查到沒寫 alt，也無濟於事。\u003C/li>\n\u003C/ol>\n\u003Ch3>近期未來發展\u003C/h3>\n\u003Ch4>進階檢查\u003C/h4>\n\u003Cp>編輯器先天不足與客製化工具的搭配，成為獨家功能，進而開啟獲利模式。\u003C/p>\n\u003Ch4>LLM 自動修復\u003C/h4>\n\u003Cp>若成本足夠低了，而且 AI 也能根據上下文給予圖片有意義的 alt 屬性或其他遵循規則，正確率也很高，就可加入自動修復。\u003C/p>\n\u003Cp>在檢測分數後，有一顆按鈕點擊後，串 LLM 自動修復該欄位，並且給予適當的值。例如圖片的 alt，LLM OCR 後，自動判斷怎樣的描述會比較好。\u003C/p>\n\u003Cp>但不要直接對內文馬上改，而是先提供預覽或是更動的地方，待點擊「同意變更」之類的按鈕後，再異動內文。\u003C/p>\n\u003Ch4>LLM 自動檢測\u003C/h4>\n\u003Cp>或者，乾脆也不用自己寫規則了。\u003C/p>\n\u003Cp>如果未來 AI 夠強，只要編輯器工具列放一顆「一鍵自動檢測修復無障礙」就搞定了。\u003C/p>\n\u003Ch3>額外要注意的地方\u003C/h3>\n\u003Cp>通常，網頁頁面的標題和副標題，不會在所見即所得的編輯器裡，這很大一部分是因為網頁排版問題。\u003C/p>\n\u003Cp>所以，工程師最好在所見即所得的外層，包一層 &lt;article&gt;，重置標籤 h 系列的順序(&lt;article&gt;表示此內容足夠當作獨立一個頁面的內容)。這樣就不需要特別動到編輯器工具，否則，可能要根據網頁的排版，限制編輯器內建的標題從哪個開始。\u003C/p>\n\u003Cp>另外，如果編輯器背景是透明，編輯器內的無障礙網頁檢查，可能沒辦法檢測到編輯器內外的問題。例如，編輯器內文字是白色，但編輯器外的背景也是白色，此狀況下，編輯器內的檢測工具，就沒辦法檢測顏色對比。\u003C/p>\n\u003Ch3>結論\u003C/h3>\n\u003Cp>這樣的工具最主要是降低有關於達成無障礙網頁的成本，對開發商、撰文者、最終讀者都有利，並且技術難度不高，剩下的就是體驗問題和自動化成本問題。\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=cd450b372ccd\" width=\"1\" height=\"1\" alt=\"\">\n",{},[54,45,24,55,56],"wysiwyg","a11y","tinymce",{"title":58,"pubDate":59,"link":60,"guid":61,"author":17,"thumbnail":9,"description":62,"content":62,"enclosure":63,"categories":64},"讓使用者透過 CUI 客製化網站風格","2024-12-23 10:00:34","https://neil-lin.medium.com/%E8%AE%93%E4%BD%BF%E7%94%A8%E8%80%85%E9%80%8F%E9%81%8E-cui-%E5%AE%A2%E8%A3%BD%E5%8C%96%E7%B6%B2%E7%AB%99%E9%A2%A8%E6%A0%BC-a529e19195f2?source=rss-dab4275321b------2","https://medium.com/p/a529e19195f2","\n\u003Cp>本篇簡單探討如果使用者可以透過 CUI 改變網站排版與風格，進而打破目前由開發者規劃好的體驗，將有什麼好處和壞處\u003C/p>\n\u003Ch3>什麼是 CUI\u003C/h3>\n\u003Cp>這裡指的 CUI，全名為 Conversational User Interface，中文並無統一的稱呼，通常以「對話式介面」、「交談式介面」常見之，也就是常常看到的「聊天機器人」、「Siri」的介面。\u003C/p>\n\u003Cp>使用者可以透過這個介面，使用「\u003Cstrong>自然語言\u003C/strong>」與「\u003Cstrong>系統互動\u003C/strong>」達成目的。我沒有找到哪一個組織明定 CUI 這個詞到底定義是不是這樣，但應該是隨著技術發展而逐漸形成的概念。\u003C/p>\n\u003Cp>例如，我曾經發想過的一篇文章「\u003Ca href=\"https://medium.com/uwillx/680f548aa94f\">如果使用即時通訊 UI 來設計購物車結帳流程，會是什麼樣的感覺？\u003C/a>」，整個畫面雖然是「對話」，但其實並不屬於 CUI 的範疇裡，因為不符合「自然語言」這項條件。\u003C/p>\n\u003Ch3>CUI 起源\u003C/h3>\n\u003Cp>即時通訊開始興起時，可以視為 CUI 的前身，其人與人「對話」的方式，為現今 CUI 的高接受度提供了使用前置習慣與經驗。\u003C/p>\n\u003Cp>當自然語言處理(Natural Language Processing, NLP)技術的開始進步，結合對話的方式，造就各大社群、即時通訊軟體以及網站紛紛開始建立各式各樣的聊天機器人，人與系統間的互動達成資訊自動化處理、減少人工成本。\u003C/p>\n\u003Cp>緊接著 Siri 的出現，開始提供文字以外的自然語言與系統互動，人們開始意識到自然語言交流的潛力，也就開始出現各式各樣的家庭控制中心、物聯網生態，例如 Google Nest，但大概也就僅止於此，普遍大家都還是會覺得「很笨」，或是局限在語言支援度不同。\u003C/p>\n\u003Cp>如今，LLM 的爆炸性發展，讓人們對未來 AI 紀元的來臨，不再只是存在於小說裡的幻想，而是實質感受到「可能真的會實現」。\u003C/p>\n\u003Ch3>CUI 出現方式\u003C/h3>\n\u003Cp>目前我們可以看到 CUI 有好幾種出現的方式：\u003C/p>\n\u003Col>\n\u003Cli>獨立專屬的頁面：\u003Ca href=\"https://chatgpt.com/\">ChatGPT\u003C/a>、\u003Ca href=\"https://gemini.google.com/app?hl=zh-TW\">Gemini\u003C/a>、\u003Ca href=\"https://www.perplexity.ai/\">Perplexity\u003C/a>、\u003Ca href=\"https://notebooklm.google/\">NotebookLM\u003C/a>\n\u003C/li>\n\u003Cli>依附在瀏覽器裡的功能：\u003Ca href=\"https://www.microsoft.com/zh-tw/edge/features/copilot?form=MA13FJ\">Edge Copilot\u003C/a>、\u003Ca href=\"https://chromewebstore.google.com/detail/monica-chatgpt-ai-assista/ofpnmcalabcbjgholdjcjblkibolbppb?hl=zh-HK\">Monica\u003C/a> Chrome Extension\u003C/li>\n\u003C/ol>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*WfuTA7qwqnReaxH2bB82uQ.png\">\u003Cfigcaption>Edge Copilot 的問答展示\u003C/figcaption>\u003C/figure>\u003Cp>3. 出現在網站或 APP 隨時可展開式的：\u003Ca href=\"https://data.gov.tw/\">政府資料開放平臺\u003C/a>的小幫手\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*iw7nu1K0mFP8xoVwHToV1Q.png\">\u003Cfigcaption>政府資料開放平臺的小幫手 TAIDE 的回答情形\u003C/figcaption>\u003C/figure>\u003Cp>4. 依附在應用程式裡：\u003Ca href=\"https://www.microsoft.com/zh-tw/microsoft-365/copilot\">Microsoft 365 Copilot\u003C/a>\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/812/1*SqqrTjlTv4sr8hyA4zZ43w.png\">\u003Cfigcaption>Microsoft Office Excel 的 Copilot 使用情境\u003C/figcaption>\u003C/figure>\u003Ch3>CUI 分類\u003C/h3>\n\u003Cp>根據「\u003Ca href=\"https://53ai.com/news/zhinengkefu/2024063018930.html\">談任務型智能客服\u003C/a>」此篇文章，CUI 可以以下三種分類\u003C/p>\n\u003Col>\n\u003Cli>依場景分類\u003C/li>\n\u003Cli>依技術分類\u003C/li>\n\u003Cli>依範圍分類\u003C/li>\n\u003C/ol>\n\u003Ch3>我認為 CUI 的下一步\u003C/h3>\n\u003Cp>我認為，CUI 要走的下一步，會是類似 Microsoft 365 Copilot 這種模式，但不僅是在辦公軟體提升生產力，而是一般網站也可以使用。\u003C/p>\n\u003Cp>例如，現在我們可以利用 Edge Copilot 查詢目前頁面並問問題，但是問完問題後，答案或結論都是在對話內容裡面，還需要使用者自行點擊對話內容的連結，觸發事件或前往網頁，這裡就形成一個使用體驗的斷點，有一種把Copilot 和網頁切開成不同世界的感覺。\u003C/p>\n\u003Cp>如果我能在網站的 CUI 可以問問題之外還能跟網頁互動，那將會再更提高體驗。例如，我在銀行網頁的 CUI，直接輸入，幫我找某張信用卡資訊，那麼網頁就會自動跳到該張信用卡介紹頁，對話內容可能就會是：已經幫您導至XX 信用卡頁面，這張主要是 blah blah blah…。如此，對話跟頁面就會對得起來，也不用一直懷疑對話內容是不是正確的，然後還要去查詢。因為網頁是不是正確的，一看就知道。\u003C/p>\n\u003Cp>基於此原理，那麼要實現「透過 CUI 客製化網站風格」的話，首先就會排除瀏覽器擴充程式的方式建立，因為會有安全性問題，瀏覽器擴充程式要跟網頁進行深度的互動一定會遇到很多限制。\u003C/p>\n\u003Cp>再來，因為是一般網站，所以排除放在專屬應用程式裡的方式，雖然某種程度很相像，但專屬應用和一般網站仍舊有所差異，因為一般網站改變排版和風格比較容易，您可以想想如果您改變了 Excel 的排版和風格。\u003C/p>\n\u003Cp>第三，依定也是排除專屬網頁的形式，因為整個介面都是對話，結果也在對話裡，沒辦法跟網站互動。\u003C/p>\n\u003Cp>也就是說，要完成「透過 CUI 客製化網站風格」這件事，使用常見的「點擊按鈕展開視窗」這種會比較適合，因為是網站開發者自行建立，應該可以針對 LLM 的回應，執行下一步的互動，並且要可以儲存狀態。\u003C/p>\n\u003Ch3>透過 CUI 客製化網站風格有什麼好處和壞處\u003C/h3>\n\u003Cp>以下只是我大概腦海一閃的想法，應該會有很大的思考不周，就當作是發想筆記也好，會陸續補充。\u003C/p>\n\u003Ch4>對開發者可能的好處：\u003C/h4>\n\u003Col>\n\u003Cli>不再需要維護多種版面，什麼 dark mode、multi style mode、圖片模式、圖文模式等，都給使用者決定就好。也就是NN Group 在「\u003Ca href=\"https://www.nngroup.com/articles/generative-ui/\">Generative UI and Outcome-Oriented Design\u003C/a>」提到的 Generative UI (GenUI) 概念\u003C/li>\n\u003Cli>因為只做一種版面與風格，可以將重點放在資訊的傳遞、效能以及優化 CUI 有關於業務的對話邏輯和操作上。\u003C/li>\n\u003C/ol>\n\u003Ch4>對開發者可能的壞處：\u003C/h4>\n\u003Col>\n\u003Cli>品牌識別可能要想別的方法塑造，因為網站的排版、風格甚至網站體驗都交由使用者決定了。\u003C/li>\n\u003Cli>安全性問題：也許有可能使用者透過漏洞，對網站造成了某種影響。\u003C/li>\n\u003C/ol>\n\u003Ch4>對使用者可能的好處\u003C/h4>\n\u003Col>\n\u003Cli>依據自身狀況，調整喜歡的顏色、排版瀏覽網頁\u003C/li>\n\u003Cli>補強無障礙網頁技術設定不足之處，例如：透過 LLM 的程式碼功能，將原本只通過 AA 等級的，改成可以通過 AAA 等級的。\u003C/li>\n\u003C/ol>\n\u003Ch4>對使用者可能的壞處\u003C/h4>\n\u003Col>\u003Cli>開發者可能會開始偷懶，變成什麼東西都要使用者自行設定，排版變得比現在的 LandingPage 更制式化\u003C/li>\u003C/ol>\n\u003Ch3>DEMO\u003C/h3>\n\u003Cp>這是一個很笨的程式也是本篇文章發想起源，我的目的是希望當網頁不符合無障礙 AA 時，使用者可以透過 CUI 補救網頁。但這個很笨的程式只能回答出 CSS ，並且被我特意放置在最後一個引入，才能覆蓋之前的 CSS。希望透過這樣一個小 Demo，能激發出大家的靈感。\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/592/1*J4iWZXOF1Rf_61WX_VG2Sg.gif\">\u003C/figure>\u003Ch3>結論\u003C/h3>\n\u003Cp>我的理想上網站會有一個客服小幫手，這個小幫手除了可以諮詢網站內容，也會自動引導，也可以改變網站外觀，甚至是要填寫內容時，就直接生成在網頁裡而不是生成在對話視窗裡等等的「下一步」動作，對話視窗內只要留下「復原」或是其他動作快捷按鈕等附加功能。因為這個「下一步」，所以開發者勢必要把精力放在 CUI 的業務對話邏輯和操作上，更近一步把斷點消除，當然，這個「下一步」在什麼時間點要吐出什麼專業的內容跟網頁互動，應該又是另一個訓練的過程，這我就不清楚了。\u003C/p>\n\u003Cp>總之一句話，CUI 會變成網站的「控制中心」。\u003C/p>\n\u003Ch3>其他參考來源：\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://blog.tpisoftware.com/ai/chatbocui/\">https://blog.tpisoftware.com/ai/chatbocui/\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://en.wikipedia.org/wiki/Conversational_user_interface\">https://en.wikipedia.org/wiki/Conversational_user_interface\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://medium.com/uxeastmeetswest/59aa90c4322c\">https://medium.com/uxeastmeetswest/59aa90c4322c\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://store.google.com/tw/product/nest_audio?hl=zh-TW\">https://store.google.com/tw/product/nest_audio?hl=zh-TW\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://zh.wikipedia.org/zh-tw/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86\">https://zh.wikipedia.org/zh-tw/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=a529e19195f2\" width=\"1\" height=\"1\" alt=\"\">\n",{},[65,55,24,44,45],"icu",{"title":67,"pubDate":68,"link":69,"guid":70,"author":17,"thumbnail":9,"description":71,"content":71,"enclosure":72,"categories":73},"UX 三刀流 2024 春季班期中作業","2024-04-10 11:16:35","https://neil-lin.medium.com/ux-%E4%B8%89%E5%88%80%E6%B5%81-2024-%E6%98%A5%E5%AD%A3%E7%8F%AD%E6%9C%9F%E4%B8%AD%E4%BD%9C%E6%A5%AD-e04ebea0c659?source=rss-dab4275321b------2","https://medium.com/p/e04ebea0c659","\n\u003Ch3>作業內容\u003C/h3>\n\u003Cp>挑選一篇 UX 案例，進行介紹與評論\u003C/p>\n\u003Ch3>挑選主題\u003C/h3>\n\u003Cp>無障礙\u003C/p>\n\u003Ch3>挑選文章\u003C/h3>\n\u003Cp>UX Case Study: Slack accessibility redesign\u003Cbr>\u003Ca href=\"https://medium.com/@izzy-shehan/19aa6eb6bfae\">https://medium.com/@izzy-shehan/19aa6eb6bfae\u003C/a>\u003C/p>\n\u003Ch3>文章介紹\u003C/h3>\n\u003Cp>此為 2019 的文章，作者設定了一個擁有閱讀障礙的新進人員情境，並指出 15–20% 的人擁有閱讀障礙為數不少，Redesign 的目標是幫助有同樣情況的人在即時通訊軟體上溝通順利而不會遭受批判。\u003Cbr>此篇文章以 Slack 為範例進行重新設計，並且聚焦在 Slack 的可讀性方面有些問題，例如顏色對比、資訊結構權重雜亂、沒有輔助使用功能等。並且根據這些缺點提出改善計畫，大致如下：\u003C/p>\n\u003Col>\n\u003Cli>調整顏色\u003C/li>\n\u003Cli>行距、間距調整，縮短\u003C/li>\n\u003Cli>收合側邊頻道選單\u003C/li>\n\u003Cli>時間提示的改善\u003C/li>\n\u003Cli>提供文字轉語音服務\u003C/li>\n\u003Cli>文章有鎖定位置功能，以便觀看與回應\u003C/li>\n\u003C/ol>\n\u003Ch3>文章評論\u003C/h3>\n\u003Cp>在僅有閱讀障礙這個條件下，作者提出的改善的確是能大幅增加閱讀的舒適程度、撐出畫面的呼吸空間以及在畫面上固定會呈現在畫面上的物件讓人感覺到放心，最後文章的結論使用動畫模擬操作過程令人一目瞭然，雖然這篇文章很短沒有細部闡述，但其實內含觀察、思考、實驗、解法與結論的完整文章。\u003C/p>\n\u003Cp>不禁在想，如果更深入一點點探討，能做到什麼程度？所以從 2018 年之後再也沒碰過 Slack 的我，又再次打開它。\u003C/p>\n\u003Ch3>Slack 現況觀察\u003C/h3>\n\u003Cp>關於 Slack 的無障礙，在\u003Ca href=\"https://slack.com/intl/zh-tw/accessibility\">協助工具\u003C/a>頁面上有提到一些，還有一些關於包容性議題的文章。另外在系統的設定裡，有顏色工具、輔助工具、還有使用鍵盤時會跳出快捷鍵提示。\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/784/1*92RmbVFtvZiygn4SO7zKag.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/777/1*J0DAmg5tkGPK1827DLnlHA.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/664/1*1xCPHpRCQm5pVs7LNHHGAQ.png\">\u003Cfigcaption>從左至右為： Slack的無障礙設定、 主題色選擇、鍵盤操作規定\u003C/figcaption>\u003C/figure>\u003Ch3>「第一次進 Slack 系統」的情境\u003C/h3>\n\u003Cp>在不更動任何設定的情況下，很明顯，在顏色方面選單的問題很大：\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/841/1*F2AmYOHrIUCaROWjxczdiw.png\">\u003Cfigcaption>在預設的主題色之下，選單大部分顏色都過不了現有的無障礙規範\u003C/figcaption>\u003C/figure>\u003Cp>再過了六年之後，仍舊是沒辦法符合現在無障礙的規範，不免跟 slack 的協助工具提到的有衝突，是蠻諷刺的。\u003C/p>\n\u003Cp>列舉一些技術影響行為的問題如下：\u003C/p>\n\u003Col>\n\u003Cli>自定義快捷鍵，導致鍵盤使用者\u003C/li>\n\u003Cli>更改與限制鍵盤 Tab 使用方式，導致沒辦法以平常瀏覽網頁的方式進行瀏覽\u003C/li>\n\u003Cli>沒有定位點，沒辦法以平常瀏覽網頁的方式跳躍\u003C/li>\n\u003Cli>資訊階層雖然在 UI 上有顯示，但技術面上沒有實行，導致鍵盤使用者沒辦法依照標題層級跳躍\u003C/li>\n\u003Cli>沒有做 RWD ，如果使用者的螢幕解析度較差，可能會不好做事\u003C/li>\n\u003Cli>使用者上傳圖片時，沒有 alt\u003C/li>\n\u003C/ol>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/841/1*F2AmYOHrIUCaROWjxczdiw.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*74UlyHL4ICDQ1TH2pTmPoA.png\">\u003Cfigcaption>選單顏色沒通過以及沒有標題層級\u003C/figcaption>\u003C/figure>\u003Ch3>能透過設定改善更多嗎？\u003C/h3>\n\u003Cp>在設定裡面，多媒體能設定要不要自動播放、訊息的通知設定以及一些文字格式等，但能設定的東西不多，自然改善的效果有限，只能從源頭就先做起才是最好的方式。\u003C/p>\n\u003Ch3>結論\u003C/h3>\n\u003Cp>稍微初步評估了 Slack 的無障礙之後可以發現：\u003C/p>\n\u003Col>\n\u003Cli>現有網站只要稍微多做一些無障礙細節的 redesign，就能幫助到更多人容易地使用，不需要大改 UI 就能夠獲得超出預期的收穫（除非是動線的設計真的有出大問題）。\u003C/li>\n\u003Cli>設計時最好不要改變平常瀏覽網頁的主要習慣（除非是在做創新、獨家的應用），否則使用者學習曲線和教育訓練成本會大增。\u003C/li>\n\u003C/ol>\n\u003Cp>基本上無障礙越早進入越好，否則到最後會累積越來越多問題，修改的成本會大幅上升。而且既然宣稱了對無障礙的重視，那就真的要去實踐，不然除了被看破手腳，在歐美可能還會吃上官司。\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=e04ebea0c659\" width=\"1\" height=\"1\" alt=\"\">\n",{},[24,55,74],"無障礙",{"title":76,"pubDate":77,"link":78,"guid":79,"author":17,"thumbnail":9,"description":80,"content":80,"enclosure":81,"categories":82},"我的第一個 Chrome 瀏覽器擴充程式：Report Website issues","2023-08-15 04:40:02","https://neil-lin.medium.com/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E5%80%8B-chrome-%E7%80%8F%E8%A6%BD%E5%99%A8%E6%93%B4%E5%85%85%E7%A8%8B%E5%BC%8F-report-website-issues-84c1b1a8668c?source=rss-dab4275321b------2","https://medium.com/p/84c1b1a8668c","\n\u003Cp>大概七年前看到同事有做了一個瀏覽器擴充程式，當時的我也是躍躍欲試，沒想到就這樣過了七年，直接變成大叔了。\u003C/p>\n\u003Cp>這次在想 2023 鐵人賽的題目，突然想起了這件事，於是就快速地學習了一下，暸解從 0 到 1 的過程，打鐵趁熱寫篇文章記錄一下。\u003C/p>\n\u003Cp>先上擴充程式連結：\u003Ca href=\"https://chrome.google.com/webstore/detail/report-website-issues/ligflmchialjgapdcgadgibgkabckglh\">https://chrome.google.com/webstore/detail/report-website-issues/ligflmchialjgapdcgadgibgkabckglh\u003C/a>\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*w4BRN7RyIh8pEkVLeSambw.png\">\u003Cfigcaption>Chrome 瀏覽器擴充程式：Report website issues\u003C/figcaption>\u003C/figure>\u003Ch3>目標與需求\u003C/h3>\n\u003Cp>接觸無障礙網頁設計之後，都沈浸在開發無障礙 UI Framework。後來想想好像應該開發一些成本低、易用、立即有幫助的簡單功能，潛在幫助大家，讓上網的環境更好，於是就有了以下理想、目標、需求：\u003C/p>\n\u003Col>\n\u003Cli>使用者可以簡單回報目前瀏覽網頁的問題：\u003Cbr>讓使用者輸入最少的情況，只收集「使用者發現的問題分類」、「目前網址」、「時間」、「作業系統/瀏覽器資訊」以及「聯絡資訊（選填）」。\u003C/li>\n\u003Cli>我透過收集到的資料，回傳給網站客服。\u003C/li>\n\u003Cli>網站客服收到網站回饋。\u003C/li>\n\u003Cli>網站工程師修正問題。\u003C/li>\n\u003Cli>使用者下次再上網發現問題解決，開心了。\u003C/li>\n\u003Cli>我透過收集資料間接幫助修網站，開心了。\u003C/li>\n\u003Cli>網站客服發現使用者黏著度上升，開心了。\u003C/li>\n\u003Cli>網站工程師修正程式碼提升技能，開心了。\u003C/li>\n\u003C/ol>\n\u003Cp>可能會有人覺得使用者直接面對網站客服不就好了嗎？\u003C/p>\n\u003Cp>我的想法是處於遇到障礙的情境下，使用者跟網站客服的溝通大部分都是雙輸的局面，尤其碰到其實是技術層面的問題。\u003C/p>\n\u003Cp>例如使用者說「我的鍵盤沒辦法瀏覽你們的網頁」，但客服卻說「我的可以喔，麻煩您再試試」，然後差不多就鬼打牆，兩邊都覺得對方很爛，因為前者是談鍵盤焦點，後者可能只是按向下鍵捲動畫面。\u003C/p>\n\u003Cp>這是個簡單例子，主要描述認識的東西不同，解讀不同。但我也不想讓使用者看太多字或輸入太多東西提高回報障礙，所以中間墊一層可能是比較好的方式，等日後 AI 變很強，就可以幫忙通靈了。\u003C/p>\n\u003Cp>那為什麼要用瀏覽器擴充程式？\u003C/p>\n\u003Cp>因為這樣子就不需要讓使用者輸入作業系統/瀏覽器版本、時間、網址了，只需要勾選分類，送出！比起前往表單，使用擴充程式的方便性更大。\u003C/p>\n\u003Ch3>現實考量\u003C/h3>\n\u003Cp>因為個人開發、只會切版跟簡單 javascript，也不會寫後端，所以必須想一些簡易的方法，還有思考瀏覽器那麼多種要挑哪個來做？於是開始思考眾多限制下的實行方案：\u003C/p>\n\u003Col>\n\u003Cli>Chrome 市場占比高、安裝意願也高，所以只鎖定 Chrome。有需要之後再做 Safari、Firefox、Edge。Edge也可以裝 Chrome 的擴充程式，所以選 Chrome CP值很高啊～！\u003C/li>\n\u003Cli>不會寫後端但需要將得到的資訊儲存，然後也因為只鎖定 Chrome，所以只想用 google 的產品：google sheet。\u003C/li>\n\u003Cli>要將資料直接存到 google sheet 還是要寫很多程式，所以想到可以跟 google sheet 溝通的 google form，它可以跟 google sheet 連結。\u003C/li>\n\u003Cli>實驗如果使用 html 的 &lt;form&gt; ，能不能將資料塞進 google form，於是找到了這篇文章：\u003Ca href=\"https://spreadsheet.dev/submit-responses-to-google-form-apps-script\">https://spreadsheet.dev/submit-responses-to-google-form-apps-script\u003C/a>\n\u003C/li>\n\u003Cli>寫一點點 javascript 提升UX，應該不是難事，不知道就問 AI\u003C/li>\n\u003C/ol>\n\u003Ch3>學習 Chrome 擴充程式\u003C/h3>\n\u003Cp>確定以上都能實作後，就開始學 Chrome 擴充程式要怎麼做，於是直接去翻最新的書：\u003Ca href=\"https://learning.oreilly.com/library/view/building-browser-extensions/9781484287255/\">https://learning.oreilly.com/library/view/building-browser-extensions/9781484287255/\u003C/a>，或是一些參考連結（注意開發版本）：\u003C/p>\n\u003Cul>\n\u003Cli>\u003Ca href=\"https://ithelp.ithome.com.tw/users/20139636/ironman/4982\">你知道這是什麼嗎？ Chrome Extension MV3 With Vite :: 2022 iThome 鐵人賽\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://ithelp.ithome.com.tw/users/20079450/ironman/1149\">Chrome Extension 開發與實作 :: 2017 iT 邦幫忙鐵人賽\u003C/a>\u003C/li>\n\u003Cli>\u003Ca href=\"https://pjchender.dev/chrome-extension/chrome-extension-api/\">[Chrome Extension] API 筆記 | PJCHENder 未整理筆記\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Cp>簡單介紹一下開發 Chrome 瀏覽器擴充程式內容：\u003C/p>\n\u003Col>\n\u003Cli>manifest.json：最重要，包含了擴充程式的所有設置、描述和功能概要，例如需要使用到的權限。如果有使用第 2 點到第 6 點，都要寫在 manifest.json，而這個檔案在最後上架的時候， google 會檢查。\u003Cbr>最新版本是 V3 ，所以在挑選線上參考連結閱讀時，要注意版本。\u003C/li>\n\u003Cli>Background Script：背景中運行，通常用來監聽事件和處理請求。\u003C/li>\n\u003Cli>popup.html：在擴充程式按一下跳出來的視窗畫面。\u003C/li>\n\u003Cli>options.html：在擴充程式按右鍵，裡面一個叫「選項」的選單按鈕，點擊後會另開視窗，是一個獨立頁面，可以在這個頁面做更多的功能、描述與使用者互動，各位可以開開看自己常用的擴充程式在這一頁有什麼樣的互動。\u003C/li>\n\u003Cli>Content Script：目前所在網頁與擴充程式的交流，例如用了擴充程式，就讓目前網頁有下雪效果。\u003C/li>\n\u003Cli>devtools.html：可以建立一個檢查程式碼時的頁面\u003C/li>\n\u003C/ol>\n\u003Cp>這次實際用到只有 1, 3, 4，實作完之後，如何測試 Chrome 擴充程式呢？\u003C/p>\n\u003Cp>其實很簡單：\u003C/p>\n\u003Col>\n\u003Cli>在 Chrome 的右上角「…」&gt; 擴充功能 &gt; 管理擴充功能\u003C/li>\n\u003Cli>打開「開發人員模式」，在左側會有三個按鈕\u003C/li>\n\u003Cli>選擇「載入未封裝項目」\u003C/li>\n\u003Cli>再選擇你的開發資料夾\u003C/li>\n\u003C/ol>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*4P1lUCeltTjtI4CFX_8Lmg.png\">\u003Cfigcaption>「開發人員模式」按鈕與「載入未封裝項目」按鈕位置示意圖\u003C/figcaption>\u003C/figure>\u003Cp>然後每次修改後，都需要更新擴充程式，更新按鈕在卡片的右下角，點擊後再重新測試你的擴充程式。\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/848/1*ZYz1eHt20wBYGRLotl1hzQ.png\">\u003Cfigcaption>擴充程式列表裡的項目\u003C/figcaption>\u003C/figure>\u003Ch3>上架與發佈\u003C/h3>\n\u003Cp>確定都沒什麼問題之後，就要到 Chrome Web Store Developer 註冊與上架\u003C/p>\n\u003Col>\n\u003Cli>\n\u003Ca href=\"https://developer.chrome.com/docs/webstore/register/\">https://developer.chrome.com/docs/webstore/register/\u003C/a> \u003Cbr>跟著文件指示註冊\u003C/li>\n\u003Cli>註冊完後需要付款 5 美元開通\u003C/li>\n\u003Cli>進到開發者 Dashboard 畫面\u003C/li>\n\u003C/ol>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*HbULRLmvWOa8AAGLNnMNRw.png\">\u003Cfigcaption>開發者儀表板畫面示意，左側為選單，右側為列表\u003C/figcaption>\u003C/figure>\u003Cp>按新增商品跟著指示走，把資料填一填即可，大致如下：\u003C/p>\n\u003Col>\n\u003Cli>套件壓縮檔\u003C/li>\n\u003Cli>可以放 Youtube 連結、首頁連結等\u003C/li>\n\u003Cli>可以放五張螢幕截圖，1280*800 或 640*400，JPEG 或 24 位元 PNG (無 alpha 透明層)，至少 1 張\u003C/li>\n\u003Cli>小 icon：440*280\u003C/li>\n\u003Cli>Banner：1400*560\u003C/li>\n\u003Cli>可以創建 GA4 資源\u003C/li>\n\u003C/ol>\n\u003Cp>但有一個重點是，如果你有需要用到使用者的權限，是需要描述清楚的，而且需要附帶一個隱私權政策的網址。如果你沒有，可以使用免費的線上服務，創建一個頁面，裡面寫好隱私權政策的內容，再把網址貼進去即可。\u003C/p>\n\u003Cp>最後就是提交了，審核時間不一定，我等了三天，看 Google 心情，後續每次修改，都需要再提交一次，所以如果是要經營的話，要注意上架審核的時間，如果時間急迫又被退件，那就麻煩了。但應該會有不重新審核就可以更新內容的技巧，但那離我太遠了。\u003C/p>\n\u003Ch3>總結\u003C/h3>\n\u003Cp>雖然只有用到簡單的 Html、CSS、Javascript 沒遇到什麼困難，但其實這樣就可以打造一個對人有用的產品了，覺得設計師/工程師們都可以多嘗試一點，說不定一個爆紅的產品就又出現了。\u003C/p>\n\u003Cp>而我也只想要用這樣可以快速、不複雜的方式打造產品，看能不能多幫助上網會遇到困難的人，能幫一個是一個，所以也用了 ChatGPT 幫我翻譯內容成英文，放到 Producthunt 上看有沒有人會看到而使用。\u003C/p>\n\u003Ca href=\"https://medium.com/media/ebd479cd2d787a57de1f5f9cac59edb0/href\">https://medium.com/media/ebd479cd2d787a57de1f5f9cac59edb0/href\u003C/a>\u003Cp>最後，邊練習擴充程式的同時，2023 鐵人賽的題目我也想出好了，希望可以順利完賽～！\u003C/p>\n\u003Cp>\u003Ca href=\"https://neillin.bobaboba.me/\">Neil's Page\u003C/a>\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=84c1b1a8668c\" width=\"1\" height=\"1\" alt=\"\">\n",{},[22,24,55,83,84],"digital-accessibility","web-design",{"title":86,"pubDate":87,"link":88,"guid":89,"author":17,"thumbnail":9,"description":90,"content":90,"enclosure":91,"categories":92},"我真的需要一個生成式 AI 工具來產生整份網頁設計稿嗎？","2023-06-16 05:34:00","https://neil-lin.medium.com/%E6%88%91%E7%9C%9F%E7%9A%84%E9%9C%80%E8%A6%81%E4%B8%80%E5%80%8B%E7%94%9F%E6%88%90%E5%BC%8F-ai-%E5%B7%A5%E5%85%B7%E4%BE%86%E7%94%A2%E7%94%9F%E6%95%B4%E4%BB%BD%E7%B6%B2%E9%A0%81%E8%A8%AD%E8%A8%88%E7%A8%BF%E5%97%8E-c45aa365ac87?source=rss-dab4275321b------2","https://medium.com/p/c45aa365ac87","\n\u003Cp>Framer AI 使用後的簡易心得\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*a1bUBRua7idZ0aJXB9VNHQ.png\">\u003Cfigcaption>\u003Ca href=\"https://www.framer.com/ai\">Framer AI\u003C/a>\u003C/figcaption>\u003C/figure>\u003Cp>ChatGPT 問世後，AI 各領域引起了關注，在靈感、知識、素材方面我也都有使用，非常方便。\u003C/p>\n\u003Cp>但如今我試用了 Framer AI 之後，我的心裡有這種念頭出現：\u003C/p>\n\u003Cp>「我真的需要一個生成式 AI 工具來產生\u003Cstrong>整份\u003C/strong>網頁設計稿嗎？」\u003C/p>\n\u003Cp>這個議題很廣，而且目前各廠商都只是在試驗各種可能，但我用完之後是非常明確產生了這個疑惑。考量到的點有：\u003C/p>\n\u003Col>\n\u003Cli>如何維護？\u003Cbr>先假設 AI 產出了一個符合我心中 100% 的 UI ，這種情況下如果我只是要修改某個頁面內容，但又不想要破壞整體性，該如何下 prompt？變成我的心思都在想怎麼 prompt，不是專注在設計修正。\u003C/li>\n\u003Cli>複雜頁面給的 prompt 會不會太複雜？\u003Cbr>比方說我給了以下一段文字：\u003Cbr>「請使用極簡風格、溫暖色調製作網頁，網頁內容必須有頁首、主要內容、頁尾區塊，頁首要有 logo 、選單，選單內的選項要有網站導覽、常見問答、登入，頁尾要深色背景、有logo、隱私權政策連結、copyright 資訊。主要內容分為…」\u003Cbr>我打到這裡手就痠了，要產出一個我真正想要的內容，必須很深入的描述整個頁面結構，可能要寫出一篇作文了。這跟用 AI 生成照片的過程，CP 值差太多了，然後部分頁面是我要的、部分頁面不是，又回到如何維護問題。\u003C/li>\n\u003Cli>電腦效能，設計資源落差將擴大！\u003Cbr>跑繪圖電腦本身就要有一點等級，再加上 AI ，效能當然要夠強，才能節省時間，然後每次提到這個我們都會想到「啊～以後的電腦運算能力會多強多強…以後就很快很輕鬆」，包含我自己也會這樣，但我們也常忽略軟體面也會更新，所以根本沒有所謂的「很快很輕鬆」這回事。\u003Cbr>另外，我們也常忽略的通用設計議題，當一個地區或某些人用的設備可能稍微老舊，就可能沒辦法用到新的技術，資源取用就產生落差。\u003C/li>\n\u003Cli>生成出來的包含 RWD ，有必要一開始就生成這些？\u003Cbr>內容都還沒確定下來就在想 RWD 真的是太早了。\u003C/li>\n\u003C/ol>\n\u003Ch3>快速心得是這樣子，所以來下個結論\u003C/h3>\n\u003Cp>局部特殊鑽研的 AI 功能對於網頁設計來說可能才是好事，較具有靈活性，負擔也比較不會那麼重。\u003C/p>\n\u003Cp>例如，我先使用專門研究設計系統的 AI ，產出一份我要的設計系統，包含規範、文件和元件庫，然後請 AI 記住以後都要遵循這個最高原則實行。\u003C/p>\n\u003Cp>當我設計 Hero 區塊時，生成 Hero 區塊的幾個排版讓我選擇，其中細項修正例如照片去除物體、影片加聲音、插圖換姿勢、目標物視角修正等還可以用 AI 調整。\u003C/p>\n\u003Cp>使用目前已經很流行的 ChatGPT，幫忙文案 SEO 最佳化。\u003C/p>\n\u003Cp>將某個區域選取，請 AI 幫我根據設計系統重新修正，包含排版、文案、按鈕位置等。\u003C/p>\n\u003Cp>這些都確定後，再用專門產出 RWD 的 AI，選擇參照哪個設計系統，幫我產出網頁 RWD 用、原生行動裝置使用的各項尺寸 UI 稿、原生行動裝置需要用的圖檔等。所以我只需要維護內容最主要、最多的畫面就好，其他用生成的。\u003C/p>\n\u003Cp>而以上的這些功能，以 Figma 來說，都只是 plugin 而已，無用無損失，局部 AI 也降低電腦使用的負擔，也激發很多人開發更好用的 Plugin，即便之後 Plugin 沒有維護了，也很容易取得新的替代品，就算沒有替代品，也就是回歸到原本的狀態而已。而又因為我們使用了 AI 產出設計系統，除非 Figma 重大更新，例如命名規則功能產生變化，不然外掛不能用都是小事罷了。\u003C/p>\n\u003Cp>也就是說，對於我而言，工具的靈活性才會是重點，因為設計師的腦不斷的在發想，隨時就需要快速修正與驗證。當然 Framer 也可能只是先推出這個 MVP ，再進行後續優化，到時當然樂見其成。\u003C/p>\n\u003Cp>現在來正式回答一下問題：\u003C/p>\n\u003Cp>「我真的需要一個生成式 AI 工具來產生\u003Cstrong>整份\u003C/strong>網頁設計稿嗎？」\u003C/p>\n\u003Cp>「我不需要，請讓我專注在需要解決的問題，而不是寫 prompt 作文。」\u003C/p>\n\u003Cp>\u003Ca href=\"https://neillin.bobaboba.me/\">Neil's Page\u003C/a>\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=c45aa365ac87\" width=\"1\" height=\"1\" alt=\"\">\n",{},[93,94,95,43,96],"figma","ui-design","prompt","framer",{"title":98,"pubDate":99,"link":100,"guid":101,"author":17,"thumbnail":9,"description":102,"content":102,"enclosure":103,"categories":104},"為什麼我愛上了在設計與切版時使用 Emoji","2022-07-01 17:56:45","https://neil-lin.medium.com/%E7%82%BA%E4%BB%80%E9%BA%BC%E6%88%91%E6%84%9B%E4%B8%8A%E4%BA%86%E5%9C%A8%E8%A8%AD%E8%A8%88%E8%88%87%E5%88%87%E7%89%88%E6%99%82%E4%BD%BF%E7%94%A8-emoji-b280e3f12f3b?source=rss-dab4275321b------2","https://medium.com/p/b280e3f12f3b","\n\u003Cp>越少依賴，就越不會出問題，且越貼心。\u003C/p>\n\u003Cp>自從專注在無障礙網頁設計之後，始終有一個問題一直盤旋在我的腦海裡，那就是「要如何使用 icon 才能達成好的無障礙設計體驗？」，而在回答這個問題之前，則是要先理解什麼是 icon 以及 icon 會如何影響整個網站視覺。\u003C/p>\n\u003Ch3>什麼是 icon ?\u003C/h3>\n\u003Cp>根據\u003Ca href=\"https://zh.wikipedia.org/zh-tw/%E5%9C%96%E7%A4%BA\">維基百科\u003C/a>定義：\u003C/p>\n\u003Cpre>圖示（icon，中國大陸、香港作圖標）：\u003C/pre>\n\u003Cpre>廣義上指所有「有指示作用」的標誌，\u003Cbr>在中文中，一般指電腦螢幕的桌面上，\u003Cbr>用來「指示」使用者執行各種操作的圖像，作為字元顯示的「重要輔助」。\u003C/pre>\n\u003Cp>應該蠻好理解的，也就是「有指示、輔助作用的標誌」。但同時也點出了第一個問題：icon 很常被拿來純裝飾用，或單獨使用。\u003C/p>\n\u003Ch3>icon 會如何影響整個網站視覺？\u003C/h3>\n\u003Cp>既然是輔助性質，那當然就是 icon 要去搭配主要視覺。\u003C/p>\n\u003Cp>例如主視覺是可愛、活潑，通常都會搭配圓角、線條相較粗的 icon，如果主視覺偏向精明幹練、專業的話，通常會搭配直角、線條較細的 icon，來保持整個網站風格的一致性。\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*bT_39p3Z_uYZMq3WJDMdGw.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/936/1*3uU6VWUEVMmFvJFK9ZO_jQ.png\">\u003Cfigcaption>一樣都是線條類型的icon，左圖呈現風格較為可愛圓潤(\u003Ca href=\"https://designmodo.com/linecons-free/\">https://designmodo.com/linecons-free/\u003C/a>)、右圖則銳利幹練(\u003Ca href=\"https://docs.microsoft.com/en-us/windows/apps/design/style/icons\">Icons — Windows apps | Microsoft Docs\u003C/a>)。\u003C/figcaption>\u003C/figure>\u003Cp>所以通常不建議使用兩種以上的 icon 系統，因爲會讓視覺上有怪異的地方，即使是相同系列的 icon，只要粗細不同，體驗就會差異相當大。這裡引出了第二個問題點：切版維護時 icon 不夠用，就會自建或拿別套 icon 來使用。\u003C/p>\n\u003Cp>理解了前兩個問題後，回到了我們的核心問題，因為設計跟切版都會影響到，考量切版層面會碰到比較多問題，所以先從切版的角度切入，最後回頭影響設計實務上會比較合理一點。\u003C/p>\n\u003Cp>先整理一下剛剛碰到的問題：\u003C/p>\n\u003Ch4>1. icon 很常被拿來純裝飾用，或單獨使用：\u003C/h4>\n\u003Cp>如果只是被拿來用成背景裝飾，那不太會有問題，因為就只是個裝飾，不需要去解釋，有問題的會是在單獨使用，在做無障礙網頁設計時，一般建議 icon 與文字一起使用，或是文字在畫面上隱藏，但在報讀軟體中會讀出來。\u003C/p>\n\u003Cpre>&lt;!-- icon 與 文字一起使用 --&gt;\u003Cbr>&lt;button&gt;\u003Cbr>  &lt;span&gt;訂閱電子郵件&lt;/span&gt;\u003Cbr>  &lt;i class=\"xxx\"&gt;&lt;/i&gt;\u003Cbr>&lt;/button&gt;\u003C/pre>\n\u003Cpre>&lt;!-- 文字在畫面上隱藏，但在報讀軟體中會讀出來 --&gt;\u003Cbr>&lt;button&gt;\u003Cbr>  &lt;span class=\"visually-hidden\"&gt;訂閱電子郵件&lt;/span&gt;\u003Cbr>  &lt;i class=\"xxx\" aria-hidden=\"true\"&gt;&lt;/i&gt;\u003Cbr>&lt;/button&gt;\u003C/pre>\n\u003Cp>但實務上也會碰到這樣的情況：\u003C/p>\n\u003Cpre>&lt;!-- 文字在畫面上隱藏，但在報讀軟體中會讀出來 --&gt;\u003Cbr>&lt;button&gt;\u003Cbr>  &lt;span class=\"visually-hidden\"&gt;訂閱電子郵件&lt;/span&gt;\u003Cbr>  &lt;svg&gt;\u003Cbr>    ...\u003Cbr>  &lt;/svg&gt;\u003Cbr>&lt;/button&gt;\u003C/pre>\n\u003Cp>然後因為 freego 掃描時會去掃 &lt;svg&gt;，會發現沒有 title，然後 svg 的 title 又要放在第一個子項目，所以又要改成：\u003C/p>\n\u003Cpre>&lt;!-- 文字在畫面上隱藏，但在報讀軟體中會讀出來 --&gt;\u003Cbr>&lt;button&gt;\u003Cbr>  &lt;span class=\"visually-hidden\"&gt;訂閱電子郵件&lt;/span&gt;\u003Cbr>  &lt;svg&gt;\u003Cbr>    &lt;title&gt;email icon&lt;/title&gt;\u003Cbr>    ...\u003Cbr>  &lt;/svg&gt;\u003Cbr>&lt;/button&gt;\u003C/pre>\n\u003Cp>然後 svg title 又不希望被報讀出來，所以再改一次：\u003C/p>\n\u003Cpre>&lt;!-- 文字在畫面上隱藏，但在報讀軟體中會讀出來 --&gt;\u003Cbr>&lt;button&gt;\u003Cbr>  &lt;span class=\"visually-hidden\"&gt;訂閱電子郵件&lt;/span&gt;\u003Cbr>  &lt;svg aria-hidden=\"true\"&gt;\u003Cbr>    &lt;title&gt;email icon&lt;/title&gt;\u003Cbr>    ...\u003Cbr>  &lt;/svg&gt;\u003Cbr>&lt;/button&gt;\u003C/pre>\n\u003Cp>或是乾脆直接在 svg 使用 aria-labelledby：\u003C/p>\n\u003Cpre>&lt;button&gt;\u003Cbr>  &lt;svg aria-labelledby=\"abc\"&gt;\u003Cbr>    &lt;title id=\"abc\"&gt;email icon&lt;/title&gt;\u003Cbr>    ...\u003Cbr>  &lt;/svg&gt;\u003Cbr>&lt;/button&gt;\u003C/pre>\n\u003Cp>或是直接放棄，就還是維持 icon 搭配文字：\u003C/p>\n\u003Cpre>&lt;button&gt;\u003Cbr>  &lt;span&gt;訂閱電子郵件&lt;/span&gt;\u003Cbr>  &lt;svg aria-hidden=\"true\"&gt;\u003Cbr>    &lt;title&gt;email icon&lt;/title&gt;\u003Cbr>    ...\u003Cbr>  &lt;/svg&gt;\u003Cbr>&lt;/button&gt;\u003C/pre>\n\u003Cp>相信到這裡你已經發現到，光是這樣一個簡單的情境，就可以使用很多種不同的方式寫出來，甚至還會被規則、掃描軟體所影響，逼得你不得不拐很多彎才能達成。\u003Ca href=\"https://fontawesome.com/docs/web/dig-deeper/accessibility\">可以參考一下光是無障礙設計，Font Awesome 就得花一大篇幅再寫注意事項\u003C/a>。\u003C/p>\n\u003Ch4>2. 切版維護時 icon 不夠用，就會自建或拿別套 icon 來使用。\u003C/h4>\n\u003Cp>這是很難避免的一種情形，例如客製化的軟體、不講武德的客戶或是專有名詞但又想要有個 icon ，面臨到這種問題時，比較在乎的可能就會自己模擬 icon 風格，畫完送進去類似 \u003Ca href=\"https://icomoon.io/\">icoMoon\u003C/a> 的工具產出 iconfont，再引入到檔案。\u003Cbr>而不在乎、趕時間、或是原本使用 fontawesome 但本身 UI Framework 也有提供 icon的情況，就會直接去拿另一套 icon 來引入，就會造成風格混亂。\u003C/p>\n\u003Cp>以上兩個問題，還只是從最源頭的問題發現的，接下來還有實作上的問題，\u003Cbr>讓我們來一一釐清。\u003C/p>\n\u003Ch4>3. 引入一套 iconFont ，就會耗損工時\u003C/h4>\n\u003Cp>就拿最常見的 Font Awesome，最新版本還要先到後台設定才能開始引入：\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*MkvKKwwoarozS5YwGL7weg.png\">\u003Cfigcaption>Font Awesome 6 要先進到設定裡面\u003C/figcaption>\u003C/figure>\u003Cp>要進到這裡來，你還得先經過註冊帳號的一系列流程，最後才能拿到手應用。再來，應用時，又有分 Html 、Vue 或是 React。\u003C/p>\n\u003Cp>以 Vue 為例，可能還要先跟團隊決定是要用 component 形式的寫法，或是一樣使用平常比較習慣的寫法 &lt;i class=”xxx”&gt;&lt;/i&gt;，然後寫程式的期間，後者還會碰到有時候沒轉成 svg 的情形（因為 watch 只有一開始偵測到才變成 svg）。\u003C/p>\n\u003Cp>再來，import 的時候，可能還要專門弄一個 plugin 檔案（Nuxt 專案的話），接著，又可能會碰到 typescript 的問題跟其他問題，因為層層依賴，所以會有各式各樣的 bug 等著。\u003C/p>\n\u003Cp>再再來，每次用的時候，都要把 Font Awesome官網開起來以便隨時查詢代碼、複製代碼或下載圖檔。\u003C/p>\n\u003Cp>再再再來，如果客戶使用環境是不能對外連網，就得把整包載入。\u003C/p>\n\u003Cp>再再再再來，客戶使用的是 IE 為大宗……….\u003C/p>\n\u003Cp>以上這些，如果目前正在閱讀的你是前端設計師/前端工程師，可以回想看看，這些時間是不是都浪費掉了。\u003C/p>\n\u003Cp>我踩過了這些坑，痛到不行。\u003C/p>\n\u003Cp>所以後來團隊在開發 \u003Ca href=\"https://ya-sai.github.io/piman/\">Piman\u003C/a> 無障礙 UI 框架和延伸的專案時，我們盡量直接使用 Emoji，為什麼呢？\u003C/p>\n\u003Col>\n\u003Cli>符合使用者當下使用的作業系統、服務：emoji 會隨著不同環境而改變，這是最自然的方式。\u003Ca href=\"https://emojipedia.org/caniemoji/\">Can I Emoji? (emojipedia.org)\u003C/a>\n\u003C/li>\n\u003Cli>沒有依賴關係：因為是 Unicode。\u003C/li>\n\u003Cli>不用需要前置作業：因為是 Unicode 。\u003C/li>\n\u003Cli>不用考慮瀏覽器能不能用：因為是 Unicode。\u003C/li>\n\u003Cli>不需要考量寫法或是怎麼通過無障礙設計規範：因為是 Unicode。\u003C/li>\n\u003Cli>依然可以展現出想表達的意思：例如 page 404 就可以用個尷尬的笑臉，報讀軟體也會把這個「情緒」給表達出來。\u003C/li>\n\u003Cli>現代人已經用的非常習慣，甚至取代貼圖了，辨識度佳。\u003C/li>\n\u003Cli>可以無痛轉換風格，例如使用 Google \u003Ca href=\"https://fonts.google.com/noto/specimen/Noto+Emoji\">Noto Emoji\u003C/a>，同樣的使用方式，轉換成不同的風格，不用改寫任何一個 html 內容，只需要引入 font 和寫 font-family。\u003C/li>\n\u003Cli>可使用快捷鍵快速尋找，例如 \u003Ca href=\"https://mrmad.com.tw/mac-emoji-shortcut\">Mac 上如何使用Emoji 表情符號？使用Emoji快捷鍵即可達成? — 瘋先生 (mrmad.com.tw)\u003C/a>\n\u003C/li>\n\u003C/ol>\n\u003Cp>當然，缺點也是有的：\u003C/p>\n\u003Col>\n\u003Cli>可能會喪失視覺風格一制性：雖然有這個疑慮，但我個人覺得還好，因為就是視為 emoji 就是個顏文字而已，不是「特別」使用的圖示，所以不太會破壞主視覺。\u003C/li>\n\u003Cli>還是解決不了 icon 不夠用的情形，尤其是客製化的情形，而且 Emoji 會隨著環境變化，反而使這個問題更糟，例如在 IE 可能就是黑白，但客製化的 icon 卻是彩色的這種尷尬情況。\u003C/li>\n\u003Cli>Noto Emoji 載入完畢前，呈現會是系統的 emoji 樣式。\u003C/li>\n\u003Cli>舊版本或不同服務可能會缺少某些 Emoji，所以不能挑太特別的使用。\u003Ca href=\"https://ccc.technews.tw/2018/07/10/why-emoji-look-different-on-every-platform/\">為什麼 emoji 在不同平台長得不一樣？ | TechNews 科技新報\u003C/a>\n\u003C/li>\n\u003Cli>太多的表情符號會造成困擾，只能適時使用。\u003Ca href=\"https://blog.easterseals.com/emojis-and-accessibility-the-dos-and-donts-of-including-emojis-in-texts-and-emails/\">Emojis and Accessibility: The Dos and Don’ts of Including Emojis in Texts and Emails | Easterseals Blog\u003C/a>\n\u003C/li>\n\u003C/ol>\n\u003Ch3>結論\u003C/h3>\n\u003Cp>我個人還是看好在無障礙網頁設計上使用 Emoji ，總體來說利大於弊，而且能有效降低工時、減少依賴，可以把時間、資源留給優先度更高的事。而在無障礙網頁設計、web3 必定是未來趨勢的前提下，相信 Emoji 的發展會更蓬勃、更多元！\u003C/p>\n\u003Cp>UI 設計師/前端設計師/前端工程師的你會怎麼想這議題呢？歡迎一起討論！\u003C/p>\n\u003Ca href=\"https://medium.com/media/fc7a605d98c7b947a0adbaf34a3bdd9a/href\">https://medium.com/media/fc7a605d98c7b947a0adbaf34a3bdd9a/href\u003C/a>\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=b280e3f12f3b\" width=\"1\" height=\"1\" alt=\"\">\n",{},[24,105,55,106,107],"emoji","無障礙網頁設計","accessible-design",{"title":109,"pubDate":110,"link":111,"guid":112,"author":17,"thumbnail":9,"description":113,"content":113,"enclosure":114,"categories":115},"Ballpark — 適合線上驗證想法的問卷服務","2022-06-29 03:19:57","https://neil-lin.medium.com/ballpark-%E9%81%A9%E5%90%88%E7%B7%9A%E4%B8%8A%E9%A9%97%E8%AD%89%E6%83%B3%E6%B3%95%E7%9A%84%E5%95%8F%E5%8D%B7%E6%9C%8D%E5%8B%99-dfc0a0865afb?source=rss-dab4275321b------2","https://medium.com/p/dfc0a0865afb","\n\u003Ch3>Ballpark — 適合線上驗證想法的問卷服務\u003C/h3>\n\u003Cp>前幾天收到 Prototypr.io 電子報，發表了一款線上問卷新服務。來寫寫快速使用後的心得。\u003C/p>\n\u003Cp>\u003Ca href=\"https://ballparkhq.com/\">Ballpark 官網\u003C/a>\u003C/p>\n\u003Cp>一看到這封電子報，還沒來得及看完內容我就迫不及待點 CTA 按鈕了！\u003C/p>\n\u003Cp>內容如下：\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"前幾天收到 Prototypr.io 電子報，內容提及了 Ballpark 可以把問卷跟 Figma Prototypes 做結合。\" src=\"https://cdn-images-1.medium.com/max/614/1*flsrBfGSjtOgXx72tU83PA.png\">\u003Cfigcaption>前幾天收到 Prototypr.io 電子報，內容提及了 Ballpark 可以把問卷跟 Figma Prototypes 做結合。\u003C/figcaption>\u003C/figure>\u003Cp>嘿！這實在是太香了，以下娓娓道來有夠香的原因：\u003C/p>\n\u003Ch4>目前 Beta 版的價格：\u003C/h4>\n\u003Cp>\u003Ca href=\"https://ballparkhq.com/pricing\">Ballpark — Plans and pricing. Start for free. (ballparkhq.com)\u003C/a>\u003C/p>\n\u003Cp>有點養套殺節奏，但 Free 版本我覺得非常適合個人、小型工作室以及敏捷開發收集回饋使用。\u003C/p>\n\u003Cp>雖然只能建立一個 Project 而且不能封存，但是 Responses 跟 Team members 都是 Unlimited，也就是說可以利用這個服務跟團隊一起快速驗證假設，之後要再開新專案，就先自己手動整理一下資料，或是申請新信箱。\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/294/1*DLxujJvcT32FH5bPryBS5g.png\">\u003Cfigcaption>免費版本雖然只能用一個專案，但其他優點覺得很可以！\u003C/figcaption>\u003C/figure>\u003Ch4>問卷與 Prototype 自然的融入，體驗無斷點：\u003C/h4>\n\u003Cp>以往發線上問卷的時候，想要測試 Prototype 時還要另外發一個連結，點擊後就會跳離問卷，會使得一致性的體驗消失，甚至受測者玩完之後，再回到問卷已經不知道正在做什麼事了。\u003C/p>\n\u003Cp>利用 ballpark ，問卷填一填，接續測試，測試還可以給予小提醒，之後趁著記憶猶新再繼續填問卷，體驗無斷點，試試就知道優點！\u003C/p>\n\u003Cp>\u003Ca href=\"https://app.ballparkhq.com/record/8cc3ea0c-e380-4d5e-b842-6d6bbbb65b96\">這是官網提供的 example\u003C/a>，簡潔明瞭的設計風格、RWD 、QRCode 也都已產出方便分享。第五個步驟就會開始進入 Prototype 的測試，玩完結束後，趁著記憶猶新，直接追問想知道的答案，而且不能再回頭測試了！\u003C/p>\n\u003Cp>目前 Prototype 可以接受 Figma 與 Marvel，除了 Prototype 之外，也可以加入影音。\u003C/p>\n\u003Ch4>編輯簡單，專注在思考如何發問：\u003C/h4>\n\u003Cp>也許是因為還在 Beta 版以及目前目標使用者很明確，所以沒有像其他發展已久的問卷系統有多樣化的功能，但我個人特別喜歡這種單純，可以讓我專注在思考問題、選擇適合的題型以及加強問卷與 Prototype 之間的聯繫。\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/285/1*oE1XPIq662WyWR3dfMC0ew.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/278/1*R_EKcQdN3qNxBua1vBrK0Q.png\">\u003Cfigcaption>ballpark 目前提供的題型\u003C/figcaption>\u003C/figure>\u003Ch4>答題前的設定：\u003C/h4>\n\u003Cp>根據不同的題型，會有不同的設定，例如 Prototype 題型，會有是否使用攝影機、麥克風以及螢幕錄影。而每個題型都有的就會有增加影片導覽以及必填設定。如果是比較需要理解的題目，這個前置作業就會變得很重要，例如降低使用者焦躁的心情等等，非常實用的功能！\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/442/1*4P1UYvxsZ4LUTaBZUWAX2g.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/510/1*HefP1VZWBPMKUZNUD1J5NQ.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/412/1*f0V-9bogHlYfFruCn-kQ8Q.png\">\u003C/figure>\u003Ch4>Summary 與 Responses:\u003C/h4>\n\u003Cp>問卷設計完後，下一個重點當然是收到回饋後的分析，畫面如下：\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*j0XCWhrBJmJ-AehLlkw7Zw.png\">\u003C/figure>\u003Cp>除了一般常見的統計之外，我比較想要知道 Prototype 他如何分析。\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/725/1*Pp482qJT5MbkzCpuvpGBFQ.png\">\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*2vxEgeM2v0nlXHUQgsBrsA.png\">\u003Cfigcaption>點擊 Heatmap 後，會出現最常點擊、移動熱區以及兩者合併的圖，左下角還可以下載圖片。下方資料區還提供各種數據資訊。\u003C/figcaption>\u003C/figure>\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*FeEMAhStWl0x75sJi3UL8Q.png\">\u003Cfigcaption>點擊 All Responses 會跳到這頁，然後突出 Prototype task 的地方。\u003C/figcaption>\u003C/figure>\u003Cp>連 Prototype 常見的簡易分析都有做到了，這真是個殺手鐧！除了在前台的體驗一致，後台的體驗也是一致，真是近年來用過最棒的服務之一了。（螢幕錄影等特殊功能還沒測試他的分析會長什麼樣子，就留待大家試試看。）\u003C/p>\n\u003Ch4>既然重視體驗，當然也備好了 Template：\u003C/h4>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*X8hCgkJEpHd3wvpiKmN-Bg.png\">\u003Cfigcaption>ballpark 提供各式各樣的 template 供各種場景使用。\u003C/figcaption>\u003C/figure>\u003Ch4>Roadmap：\u003C/h4>\n\u003Cp>國外服務看了好幾個都會把 Roadmap 給展示出來讓大家知道，覺得真的是很棒的一件事，暸解他們未來的規劃方向，可以給使用者更多資訊來判斷自己需不需要這項服務，例如近期可能就會開發測試線上網站的功能。\u003C/p>\n\u003Cp>\u003Ca href=\"https://portal.productboard.com/ballpark/1-ballpark/tabs/1-short-term-1-6-months\">https://portal.productboard.com/ballpark/1-ballpark/tabs/1-short-term-1-6-months\u003C/a>\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*EKdXgv0mfu7kK2E4Zsu3Zg.png\">\u003Cfigcaption>ballpark 的路線圖\u003C/figcaption>\u003C/figure>\u003Ch4>那…缺點呢？\u003C/h4>\n\u003Cp>價格可能還是第一優先考量，如果專案有封存的需求、分享時密碼保護、下載 CSV等，那就勢必一直升級方案。Starter 年付平約一個月 100 美金，一整年相當於台幣約 35000 左右，對於個人工作室或小型企業可能還是有一點負擔，需要評估使用 ballpark 的效益。\u003C/p>\n\u003Cp>另外是目前沒有中文支援，因為CTA 按鈕是不給編輯文字的（呼應我前面講的單純），所以如果很介意一定都要中文的，可能就不適合，不過這項未來應該是會改善，畢竟站在 UX Writing 的角度來說，適合的文案才能更讓人理解如何操作。\u003C/p>\n\u003Cp>而跳題等進階題型設定也還沒有出現，目前也沒有在路線圖看到，也許他們想先專注在某些功能上吧。\u003C/p>\n\u003Cp>這次快速地熟悉了 ballpark 的核心，希望未來有機會能使用這樣服務，也是驗證這項產品適不適合用在自身的公司身上，但想像中應該是很多可以發揮的地方，拭目以待未來的發展！\u003C/p>\n\u003Cp>\u003Ca href=\"https://neillin.bobaboba.me/\">Neil's Page\u003C/a>\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=dfc0a0865afb\" width=\"1\" height=\"1\" alt=\"\">\n",{},[116,117,93,118,119],"questionnaire","feedback","surveys","prototype",1748093147089]
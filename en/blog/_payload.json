[{"data":1,"prerenderedAt":26},["ShallowReactive",2],{"I3YPfiqfqc":3},{"status":4,"feed":5,"items":11},"ok",{"url":6,"title":7,"link":8,"author":9,"description":7,"image":10},"https://medium.com/feed/@neil-lin","Stories by Neil on Medium","https://medium.com/@neil-lin?source=rss-dab4275321b------2","","https://cdn-images-1.medium.com/fit/c/150/150/1*-vHo6JSOXqEJ0dly1rpnFA.png",[12],{"title":13,"pubDate":14,"link":15,"guid":16,"author":17,"thumbnail":9,"description":18,"content":18,"enclosure":19,"categories":20},"Building Accesserty — An Accessibility Experience from Search to Development","2025-05-23 10:14:53","https://neil-lin.medium.com/building-accesserty-an-accessibility-experience-from-search-to-development-ea7ef4ad4b8b?source=rss-dab4275321b------2","https://medium.com/p/ea7ef4ad4b8b","Neil","\n\u003Ch3>Building Accesserty — An Accessibility Experience from Search to Development\u003C/h3>\n\u003Cp>How a solo developer used AI and empathy to create an accessibility toolchain\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*SIyD22s4QBA_pbfSYyQp4w.avif\">\u003Cfigcaption>Accesserty Brand\u003C/figcaption>\u003C/figure>\u003Cp>\u003Ca href=\"https://vocus.cc/article/68332fd1fd897800015fa25c\">中文版\u003C/a>\u003C/p>\n\u003Cp>Today, I’d like to share the story behind \u003Cstrong>Accesserty\u003C/strong>, a small product ecosystem I built in about a month, aimed at improving the accessible web experience. From the moment users search to the moment developers build, I wanted to offer a calm, practical set of tools to make accessibility visible, understandable, and actionable.\u003C/p>\n\u003Ch3>Origin: Curiosity about Chrome Extensions\u003C/h3>\n\u003Cp>Back in 2023, I created my first Chrome extension — \u003Ca href=\"https://chrome.google.com/webstore/detail/report-website-issues/ligflmchialjgapdcgadgibgkabckglh\">Report Website Issues\u003C/a> — simply out of curiosity.\u003C/p>\n\u003Cp>\u003Ca href=\"https://vocus.cc/article/68332fe5fd897800015fa7c6\">我的第一個 Chrome 瀏覽器擴充程式：Report Website issues\u003C/a>\u003C/p>\n\u003Cp>Now in 2025, with the rise of large language models (LLMs), I began thinking about how AI might help me build tools that address real-world accessibility challenges.\u003C/p>\n\u003Cp>I experimented with assigning LLMs different “roles” — product manager, frontend dev, accessibility analyst — and used them to speed up system design and implementation.\u003C/p>\n\u003Ch3>Identifying the Problems\u003C/h3>\n\u003Ch4>1. After searching, users still don’t know which link to click\u003C/h4>\n\u003Cp>Search engines consider SEO, performance, and content, but that doesn’t mean the top results are easy to use — especially for people who rely on keyboard navigation or screen readers.\u003C/p>\n\u003Cp>Sites may appear technically sound but be visually cluttered, hard to navigate, or inaccessible by design.\u003Cbr> So I started wondering:\u003C/p>\n\u003Cp>\u003Cstrong>What if I could see how accessible a site is — right from the search result list?\u003C/strong>\u003C/p>\n\u003Cp>It would save time, reduce frustration, and help everyone make more informed choices.\u003C/p>\n\u003Ch4>2. Users often have no way to report issues\u003C/h4>\n\u003Cp>Even if a user encounters a serious accessibility problem, it’s often unclear how to report it — or if it will even be taken seriously.\u003C/p>\n\u003Cp>Worse, communication gaps happen. Like in a case I mentioned in an earlier post:\u003C/p>\n\u003Cblockquote>\u003Cem>A user says: “I can’t browse your site using the keyboard.”\u003Cbr> A support rep replies: “It works fine for me — maybe try again?”\u003Cbr> But they’re talking about different things. One refers to keyboard focus logic; the other is just pressing the down arrow key. They both get frustrated.\u003C/em>\u003C/blockquote>\n\u003Cp>So I realized there needs to be a “bridge” — someone or something that helps users explain issues clearly and helps developers receive usable feedback.\u003Cbr> Right now, LLMs might help with summarization, but the cost and accuracy are still limiting.\u003C/p>\n\u003Ch4>3. Is accessibility really expensive for developers?\u003C/h4>\n\u003Cp>With recent EU regulations, many UI frameworks now include more accessible components — that’s progress.\u003Cbr> But passing machine audits isn’t enough.\u003C/p>\n\u003Cp>\u003Cem>Compliance ≠ usability.\u003C/em>\u003C/p>\n\u003Cp>Take text, for instance. A machine can check if it’s there —\u003Cbr> but only a human can tell if it actually describes the image meaningfully in context.alt\u003C/p>\n\u003Cp>Even if LLMs could generate decent descriptions, that still involves API costs, image parsing, and prompt design — not to mention hallucination risks.\u003C/p>\n\u003Cp>That led me to a fundamental insight:\u003C/p>\n\u003Cblockquote>The earlier you address accessibility, the lower the cost.\u003C/blockquote>\n\u003Cp>From planning to design to engineering, everyone needs to be aligned early.\u003Cbr>This diagram sums it up well:\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/936/1*cVw-h1vd4Oqc8BrbGPc3xA.png\">\u003Cfigcaption>Source: Is Closing the Web Accessibility Design/Development Gap a Bridge Too Far? \u003Ca href=\"https://www.deque.com/blog/is-closing-the-web-accessibility-design-development-gap-a-bridge-too-far/\">https://www.deque.com/blog/is-closing-the-web-accessibility-design-development-gap-a-bridge-too-far/\u003C/a>\u003C/figcaption>\u003C/figure>\u003Ch3>Solutions: Simulate, Detect, Report\u003C/h3>\n\u003Cp>Based on these observations, I created a journey map to visualize the pain points across users, developers, and site owners.\u003C/p>\n\u003Ca href=\"https://medium.com/media/f80e0fbe08da3787a654a3666baef43f/href\">https://medium.com/media/f80e0fbe08da3787a654a3666baef43f/href\u003C/a>\u003Cp>I divided the process into two phases:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cstrong>Prevention\u003C/strong> — Help build accessibility in early\u003C/li>\n\u003Cli>\n\u003Cstrong>Remediation\u003C/strong> — Identify and fix real-world issues through feedback\u003C/li>\n\u003C/ul>\n\u003Cp>The goal: a sustainable feedback loop where everyone benefits.\u003C/p>\n\u003Ch3>Building the Accesserty Brand\u003C/h3>\n\u003Cp>Many a11y tools try to scare developers into action — with stories of lawsuits or million-dollar fines.\u003C/p>\n\u003Cp>I didn’t want to do that.\u003Cbr>Instead, I wanted to design something that felt \u003Cstrong>rational, respectful, and constructive\u003C/strong>.\u003C/p>\n\u003Cp>So with help from my “product manager” (aka ChatGPT 😎), I defined Accesserty’s brand principles:\u003C/p>\n\u003Cp>We aim to be…\u003Cstrong>Calm, clear, transparent, inclusive\u003C/strong>\u003C/p>\n\u003Cp>And we avoid…\u003Cstrong>Fear-driven messaging, tokenism, accessibility as an afterthought\u003C/strong>\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Z14tBChoEsgMU1wsRjk44A.png\">\u003Cfigcaption>I even used ChatGPT’s new project folder mode to keep a shared background doc, flowcharts, and multiple conversations — as if working with a real team.\u003C/figcaption>\u003C/figure>\u003Cp>With the structure aligned, I started coding the actual tools — one by one — with the help of Chrome Extension, Web Components, AppSheet, and some Vibe Coding.\u003C/p>\n\u003Ch3>The Accesserty Ecosystem\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-signal/jabgpbgdmhdmibhogmcjfinnkcngcelc\">\u003Cstrong>Accesserty Signal\u003C/strong>\u003C/a>\u003Cbr> See accessibility status directly in Google Search\u003C/li>\n\u003Cli>\n\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-devcheck/ompbhahmipenipgiiiehbkiibkonoeec?pli=1\">\u003Cstrong>Accesserty DevCheck\u003C/strong>\u003C/a>\u003Cbr> Simulate vision impairments, detect violations (e.g., color blindness, alt text, heading issues)\u003C/li>\n\u003Cli>\n\u003Ca href=\"https://github.com/Accesserty/UI-Kit\">\u003Cstrong>Accesserty UI Kit\u003C/strong>\u003C/a>\u003Cbr> Build with accessible Web Components from day one\u003C/li>\n\u003Cli>\n\u003Cstrong>Accesserty Console\u003C/strong>\u003Cbr> An AppSheet-based CRM to manage feedback, assign issues, and close the loop\u003C/li>\n\u003C/ul>\n\u003Cp>Built solo, with AI as a thought partner, and designed for low-maintenance sustainability.\u003C/p>\n\u003Ch3>Launched on GAAD 🎉\u003C/h3>\n\u003Cp>I chose to launch Accesserty on \u003Cstrong>Global Accessibility Awareness Day (GAAD)\u003C/strong> — \u003Cbr>the third Thursday of May, every year.\u003C/p>\n\u003Cp>You can find it on Product Hunt here:\u003Cbr> 👉 \u003Ca href=\"https://www.producthunt.com/posts/accesserty\">Accesserty on Product Hunt\u003C/a>\u003C/p>\n\u003Ca href=\"https://medium.com/media/70a825e44a04dea081e0e037488e66be/href\">https://medium.com/media/70a825e44a04dea081e0e037488e66be/href\u003C/a>\u003Cp>My hope is that this helps show:\u003C/p>\n\u003Cblockquote>You don’t need a big team or budget to make the web more accessible.\u003Cbr>With the right mindset and tools, transparency and improvement can happen — at scale, and with care.\u003C/blockquote>\n\u003Cp>If you’ve ever felt unsure which site to trust when searching, or if you’ve ever hit an accessibility wall and had nowhere to report it — \u003Cbr>Accesserty was built for you.\u003C/p>\n\u003Cp>I’d love to hear your thoughts, feedback, or even ideas for collaboration.\u003C/p>\n\u003Ch3>Related Links\u003C/h3>\n\u003Cp>\u003Ca href=\"https://accessibility.day/\">GAAD\u003C/a>\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ea7ef4ad4b8b\" width=\"1\" height=\"1\" alt=\"\">\n",{},[21,22,23,24,25],"product-hunt","chrome-extension","solo-founder","accessibility","webdev",1748449586515]
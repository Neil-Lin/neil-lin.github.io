[{"data":1,"prerenderedAt":47},["ShallowReactive",2],{"$fUCrBggrAIsW1mfxbhMYwSlEn7GZW8PjssKT056UHXVw":3},{"status":4,"feed":5,"items":11},"ok",{"url":6,"title":7,"link":8,"author":9,"description":7,"image":10},"https://medium.com/feed/@neil-lin","Stories by Neil on Medium","https://medium.com/@neil-lin?source=rss-dab4275321b------2","","https://cdn-images-1.medium.com/fit/c/150/150/1*-vHo6JSOXqEJ0dly1rpnFA.png",[12,26,36],{"title":13,"pubDate":14,"link":15,"guid":16,"author":17,"thumbnail":9,"description":18,"content":18,"enclosure":19,"categories":20},"The Invisible Experience Gap: Why It’s So Hard to Find Truly Usable Websites","2025-07-11 16:59:49","https://neil-lin.medium.com/the-invisible-experience-gap-why-its-so-hard-to-find-truly-usable-websites-dec69e114caa?source=rss-dab4275321b------2","https://medium.com/p/dec69e114caa","Neil","\n\u003Cp>Why I decided to display accessibility signals in search results.\u003C/p>\n\u003Ch3>1. A familiar, frustrating scene\u003C/h3>\n\u003Cblockquote>You open Google, type in your query, and ten blue links appear.\u003C/blockquote>\n\u003Cblockquote>You click the first one — it’s full of ads, so you close it.\u003Cbr> The second — tons of images, but no useful content.\u003Cbr> The third — you press the Tab key a few times, and the cursor disappears somewhere…\u003C/blockquote>\n\u003Cblockquote>Eventually, you wonder:\u003Cbr>\u003Cem>Am I just being too picky?\u003C/em>\n\u003C/blockquote>\n\u003Ch3>2. The problem isn’t “too much information” — it’s that we can’t see usability\u003C/h3>\n\u003Cp>Most modern search engines rank results based on SEO, page speed, and content density. But what actually makes a site \u003Cstrong>usable\u003C/strong> is deeply practical — and often subjective:\u003C/p>\n\u003Cul>\n\u003Cli>Can you navigate with just a keyboard?\u003C/li>\n\u003Cli>Do the headings make sense?\u003C/li>\n\u003Cli>Are ads covering the main content?\u003C/li>\n\u003Cli>Is the color contrast strong enough to read comfortably?\u003C/li>\n\u003C/ul>\n\u003Cp>These aren’t things we can evaluate from a link preview.\u003Cbr>We only find out \u003Cem>after\u003C/em> clicking — by spending time, patience, and emotional energy.\u003C/p>\n\u003Ch3>3. What I wanted to change: Make experience visible before you click\u003C/h3>\n\u003Cp>That’s when I started wondering:\u003C/p>\n\u003Cblockquote>\u003Cstrong>\u003Cem>What if you could see a website’s accessibility state right at the moment of search?\u003C/em>\u003C/strong>\u003C/blockquote>\n\u003Cp>Not to assign ratings.\u003Cbr>Not to label or shame anyone.\u003Cbr>But to simply ask:\u003C/p>\n\u003Cblockquote>\u003Cem>“Has this website made an effort to be comfortable and usable?”\u003C/em>\u003C/blockquote>\n\u003Cp>I’m not trying to build a new search engine.\u003Cbr>I just want to make user experience \u003Cstrong>visible\u003C/strong>, at a glance.\u003C/p>\n\u003Cp>That’s where the idea for \u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-signal/jabgpbgdmhdmibhogmcjfinnkcngcelc?pli=1\">\u003Cstrong>Accesserty Signal\u003C/strong>\u003C/a> began.\u003C/p>\n\u003Ch3>4. What is Signal?\u003C/h3>\n\u003Cp>It’s not a rating — it’s \u003Cstrong>a helper for decision-making\u003C/strong>\u003C/p>\n\u003Cp>Accesserty Signal is a lightweight Chrome extension that adds a simple badge to each Google search result:\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/705/1*v2mDuAH_o6-vTIES31bX_Q.png\">\u003Cfigcaption>Lighthouse Score\u003C/figcaption>\u003C/figure>\u003Cp>This number comes from Lighthouse, a widely used accessibility audit tool.\u003Cbr>It’s explainable, standardized, and easy to compare.\u003C/p>\n\u003Cp>It’s not a judgment.\u003Cbr>It’s not a curated “good websites only” list.\u003Cbr>It’s just a small clue to help users choose where to click.\u003C/p>\n\u003Ch3>5. Why I refused to make it a rating system\u003C/h3>\n\u003Cp>Because I didn’t want this to become another \u003Cstrong>“score game.”\u003C/strong>\u003C/p>\n\u003Cp>Too many platforms reduce experience to 1–5 stars, and it always ends up with:\u003C/p>\n\u003Cul>\n\u003Cli>Manipulated ratings (via marketing bots)\u003C/li>\n\u003Cli>Misleading reviews (1-star due to a bad mood, not the product)\u003C/li>\n\u003Cli>Used to pressure creators (“fix this or we’ll expose you”)\u003C/li>\n\u003C/ul>\n\u003Cp>I wanted to avoid all of that.\u003C/p>\n\u003Cp>The accessibility score in Accesserty Signal is just a \u003Cem>neutral indicator\u003C/em>.\u003Cbr>Real improvement still depends on whether the website \u003Cstrong>wants\u003C/strong> to improve.\u003C/p>\n\u003Ch3>6. It’s just the beginning — but it adds a little transparency\u003C/h3>\n\u003Cp>I know Accesserty Signal won’t change the web overnight.\u003Cbr> But it does one small thing:\u003C/p>\n\u003Cblockquote>\u003Cstrong>\u003Cem>It makes experience visible — not something users have to discover the hard way.\u003C/em>\u003C/strong>\u003C/blockquote>\n\u003Cp>If you’ve ever hesitated before clicking a link, unsure if the site would be a pain…\u003C/p>\n\u003Cp>If you’ve ever closed a site because it felt too messy or hostile…\u003C/p>\n\u003Cp>Then you’ve already felt \u003Cstrong>the invisibility of user experience\u003C/strong>.\u003C/p>\n\u003Cp>\u003Ca href=\"https://www.producthunt.com/posts/accesserty\">Accesserty\u003C/a> is my way of trying to make that gap more visible, understandable, and improvable — one badge at a time.\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=dec69e114caa\" width=\"1\" height=\"1\" alt=\"\">\n",{},[21,22,23,24,25],"chrome-extension","a11y","accessibility","lighthouse","usability",{"title":27,"pubDate":28,"link":29,"guid":30,"author":17,"thumbnail":9,"description":31,"content":31,"enclosure":32,"categories":33},"Accesserty DevCheck — Simulate and Detect Accessibility Challenges Before You Ship","2025-06-07 12:41:20","https://neil-lin.medium.com/accesserty-devcheck-simulate-and-detect-accessibility-challenges-before-you-ship-2072a1dde291?source=rss-dab4275321b------2","https://medium.com/p/2072a1dde291","\n\u003Ch3>Accesserty DevCheck — Simulate and Detect Accessibility Challenges Before You Ship\u003C/h3>\n\u003Cp>Stop waiting for complaints. Start feeling what your users feel — directly inside your dev workflow.\u003C/p>\n\u003Cp>When we talk about accessibility, most people think of checklists, screen readers, or legal compliance.\u003C/p>\n\u003Cp>But real accessibility issues don’t always show up in audits.\u003Cbr> They show up when:\u003C/p>\n\u003Cul>\n\u003Cli>A user can’t tell where the content begins\u003C/li>\n\u003Cli>A button is too small for touch\u003C/li>\n\u003Cli>Text is blurry for someone with poor vision\u003C/li>\n\u003Cli>A flashing banner causes discomfort\u003C/li>\n\u003Cli>A layout breaks when text size increases\u003C/li>\n\u003C/ul>\n\u003Cp>These problems often go unnoticed — until it’s too late.\u003C/p>\n\u003Cp>That’s why I built \u003Cstrong>Accesserty DevCheck\u003C/strong>:\u003Cbr> A developer tool that helps you \u003Cstrong>simulate real-world accessibility challenges\u003C/strong> and \u003Cstrong>run basic tests\u003C/strong>, all from your browser.\u003C/p>\n\u003Ch3>Why Simulation Matters\u003C/h3>\n\u003Cp>Automated tools like Lighthouse or axe-core can check for missing alt text, bad heading structure, or missing ARIA labels.\u003C/p>\n\u003Cp>But \u003Cstrong>they can’t tell you\u003C/strong> what it’s like to actually use your product if:\u003C/p>\n\u003Cul>\n\u003Cli>You have color blindness\u003C/li>\n\u003Cli>You experience visual blur or cataracts\u003C/li>\n\u003Cli>You can’t see part of the screen\u003C/li>\n\u003Cli>You use only one finger on a touchscreen\u003C/li>\n\u003Cli>You rely on large text or dark modes\u003C/li>\n\u003C/ul>\n\u003Cp>That’s where \u003Cstrong>DevCheck’s simulation layer\u003C/strong> comes in.\u003C/p>\n\u003Ch3>What DevCheck Offers\u003C/h3>\n\u003Cp>These tools let you experience a website the way many users do — with visual or interaction limitations:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cstrong>Color Blindness Simulation\u003C/strong>\u003Cbr>(Red-green, blue-yellow, total monochrome, and more)\u003C/li>\n\u003Cli>\n\u003Cstrong>Visual Blur Simulation\u003Cbr>\u003C/strong>Myopia (full blur)\u003Cbr>Presbyopia (center blur)\u003Cbr>Cataracts (glare + fog)\u003C/li>\n\u003Cli>\n\u003Cstrong>Screen Occlusion\u003C/strong>\u003Cbr>Simulate partial visual field loss (common with eye diseases)\u003C/li>\n\u003Cli>\n\u003Cstrong>Large Text / Increased Spacing\u003C/strong>\u003Cbr>Helps test responsive behavior under assistive settings\u003C/li>\n\u003Cli>\n\u003Cstrong>Color Inversion Mode\u003C/strong>\u003Cbr>Simulate forced dark mode effects\u003C/li>\n\u003Cli>\n\u003Cstrong>Finger Tap Zone Simulation\u003C/strong>\u003Cbr>Shows a 64px circle around your cursor to test if small clickable areas are accessible\u003C/li>\n\u003C/ul>\n\u003Ch3>Detection Tools (Debug Mode)\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Cstrong>axe-core audit\u003C/strong>\u003Cbr> Run in-browser checks for common violations\u003C/li>\n\u003Cli>\n\u003Cem>(Coming Soon)\u003Cbr>\u003C/em>Image alt text analysis\u003Cbr>Heading structure visualizer\u003Cbr>Landmark checks\u003Cbr>SEO metadata detection\u003Cbr>ARIA misuse warnings\u003C/li>\n\u003C/ul>\n\u003Ch3>\u003Cstrong>Who is it for?\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Cstrong>Frontend developers\u003C/strong> — Test as you build\u003C/li>\n\u003Cli>\n\u003Cstrong>Designers\u003C/strong> — Validate layouts, spacing, and color choices\u003C/li>\n\u003Cli>\n\u003Cstrong>PMs\u003C/strong> — Simulate user pain points before demo day\u003C/li>\n\u003Cli>\n\u003Cstrong>Testers\u003C/strong> — Reproduce visual experience issues\u003C/li>\n\u003Cli>\n\u003Cstrong>Customer support\u003C/strong> — Understand user complaints better\u003C/li>\n\u003C/ul>\n\u003Ch3>It’s not about compliance — it’s about empathy\u003C/h3>\n\u003Cp>Most users won’t report accessibility issues.\u003C/p>\n\u003Cp>Why?\u003C/p>\n\u003Cp>Because:\u003C/p>\n\u003Cul>\n\u003Cli>They don’t know how\u003C/li>\n\u003Cli>They don’t know who to tell\u003C/li>\n\u003Cli>They don’t believe anything will change\u003C/li>\n\u003C/ul>\n\u003Cp>\u003Cstrong>DevCheck gives you a way to feel what they feel\u003C/strong> — before they bounce, quit, or struggle in silence.\u003C/p>\n\u003Ch3>Try Accesserty DevCheck Now\u003C/h3>\n\u003Cp>\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-devcheck/ompbhahmipenipgiiiehbkiibkonoeec?pli=1\">Accesserty DevCheck - Chrome Web Store\u003C/a>\u003C/p>\n\u003Cp>You don’t have to be an accessibility expert.\u003Cbr> You just need the curiosity to \u003Cstrong>simulate\u003C/strong>, and the willingness to \u003Cstrong>adjust before it hurts\u003C/strong>.\u003C/p>\n\u003Cp>Accessible design doesn’t have to be expensive.\u003Cbr>It just needs to be earlier.\u003C/p>\n\u003Cp>Want to go deeper? You can also explore:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-signal/jabgpbgdmhdmibhogmcjfinnkcngcelc\">Accesserty Signal\u003C/a> — Surface a11y scores in Google Search\u003C/li>\n\u003Cli>\n\u003Ca href=\"https://github.com/Accesserty/UI-Kit\">Accesserty UI Kit\u003C/a> — Accessible web components you can use right away\u003C/li>\n\u003Cli>Why I built Accesserty — \u003Ca href=\"https://neil-lin.medium.com/ea7ef4ad4b8b\">Origin story\u003C/a>\n\u003C/li>\n\u003C/ul>\n\u003Cp>Thanks for reading — and if you ever felt a website wasn’t built with you in mind, you’re not alone.\u003C/p>\n\u003Cp>Let’s change that.\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=2072a1dde291\" width=\"1\" height=\"1\" alt=\"\">\n",{},[23,34,22,35,21],"universal-design","devtools",{"title":37,"pubDate":38,"link":39,"guid":40,"author":17,"thumbnail":9,"description":41,"content":41,"enclosure":42,"categories":43},"Building Accesserty — An Accessibility Experience from Search to Development","2025-05-23 10:14:53","https://neil-lin.medium.com/building-accesserty-an-accessibility-experience-from-search-to-development-ea7ef4ad4b8b?source=rss-dab4275321b------2","https://medium.com/p/ea7ef4ad4b8b","\n\u003Ch3>Building Accesserty — An Accessibility Experience from Search to Development\u003C/h3>\n\u003Cp>How a solo developer used AI and empathy to create an accessibility toolchain\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*SIyD22s4QBA_pbfSYyQp4w.avif\">\u003Cfigcaption>Accesserty Brand\u003C/figcaption>\u003C/figure>\u003Cp>\u003Ca href=\"https://vocus.cc/article/68332fd1fd897800015fa25c\">中文版\u003C/a>\u003C/p>\n\u003Cp>Today, I’d like to share the story behind \u003Cstrong>Accesserty\u003C/strong>, a small product ecosystem I built in about a month, aimed at improving the accessible web experience. From the moment users search to the moment developers build, I wanted to offer a calm, practical set of tools to make accessibility visible, understandable, and actionable.\u003C/p>\n\u003Ch3>Origin: Curiosity about Chrome Extensions\u003C/h3>\n\u003Cp>Back in 2023, I created my first Chrome extension — \u003Ca href=\"https://chrome.google.com/webstore/detail/report-website-issues/ligflmchialjgapdcgadgibgkabckglh\">Report Website Issues\u003C/a> — simply out of curiosity.\u003C/p>\n\u003Cp>\u003Ca href=\"https://vocus.cc/article/68332fe5fd897800015fa7c6\">我的第一個 Chrome 瀏覽器擴充程式：Report Website issues\u003C/a>\u003C/p>\n\u003Cp>Now in 2025, with the rise of large language models (LLMs), I began thinking about how AI might help me build tools that address real-world accessibility challenges.\u003C/p>\n\u003Cp>I experimented with assigning LLMs different “roles” — product manager, frontend dev, accessibility analyst — and used them to speed up system design and implementation.\u003C/p>\n\u003Ch3>Identifying the Problems\u003C/h3>\n\u003Ch4>1. After searching, users still don’t know which link to click\u003C/h4>\n\u003Cp>Search engines consider SEO, performance, and content, but that doesn’t mean the top results are easy to use — especially for people who rely on keyboard navigation or screen readers.\u003C/p>\n\u003Cp>Sites may appear technically sound but be visually cluttered, hard to navigate, or inaccessible by design.\u003Cbr> So I started wondering:\u003C/p>\n\u003Cp>\u003Cstrong>What if I could see how accessible a site is — right from the search result list?\u003C/strong>\u003C/p>\n\u003Cp>It would save time, reduce frustration, and help everyone make more informed choices.\u003C/p>\n\u003Ch4>2. Users often have no way to report issues\u003C/h4>\n\u003Cp>Even if a user encounters a serious accessibility problem, it’s often unclear how to report it — or if it will even be taken seriously.\u003C/p>\n\u003Cp>Worse, communication gaps happen. Like in a case I mentioned in an earlier post:\u003C/p>\n\u003Cblockquote>\u003Cem>A user says: “I can’t browse your site using the keyboard.”\u003Cbr> A support rep replies: “It works fine for me — maybe try again?”\u003Cbr> But they’re talking about different things. One refers to keyboard focus logic; the other is just pressing the down arrow key. They both get frustrated.\u003C/em>\u003C/blockquote>\n\u003Cp>So I realized there needs to be a “bridge” — someone or something that helps users explain issues clearly and helps developers receive usable feedback.\u003Cbr> Right now, LLMs might help with summarization, but the cost and accuracy are still limiting.\u003C/p>\n\u003Ch4>3. Is accessibility really expensive for developers?\u003C/h4>\n\u003Cp>With recent EU regulations, many UI frameworks now include more accessible components — that’s progress.\u003Cbr> But passing machine audits isn’t enough.\u003C/p>\n\u003Cp>\u003Cem>Compliance ≠ usability.\u003C/em>\u003C/p>\n\u003Cp>Take text, for instance. A machine can check if it’s there —\u003Cbr> but only a human can tell if it actually describes the image meaningfully in context.alt\u003C/p>\n\u003Cp>Even if LLMs could generate decent descriptions, that still involves API costs, image parsing, and prompt design — not to mention hallucination risks.\u003C/p>\n\u003Cp>That led me to a fundamental insight:\u003C/p>\n\u003Cblockquote>The earlier you address accessibility, the lower the cost.\u003C/blockquote>\n\u003Cp>From planning to design to engineering, everyone needs to be aligned early.\u003Cbr>This diagram sums it up well:\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/936/1*cVw-h1vd4Oqc8BrbGPc3xA.png\">\u003Cfigcaption>Source: Is Closing the Web Accessibility Design/Development Gap a Bridge Too Far? \u003Ca href=\"https://www.deque.com/blog/is-closing-the-web-accessibility-design-development-gap-a-bridge-too-far/\">https://www.deque.com/blog/is-closing-the-web-accessibility-design-development-gap-a-bridge-too-far/\u003C/a>\u003C/figcaption>\u003C/figure>\u003Ch3>Solutions: Simulate, Detect, Report\u003C/h3>\n\u003Cp>Based on these observations, I created a journey map to visualize the pain points across users, developers, and site owners.\u003C/p>\n\u003Ca href=\"https://medium.com/media/f80e0fbe08da3787a654a3666baef43f/href\">https://medium.com/media/f80e0fbe08da3787a654a3666baef43f/href\u003C/a>\u003Cp>I divided the process into two phases:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cstrong>Prevention\u003C/strong> — Help build accessibility in early\u003C/li>\n\u003Cli>\n\u003Cstrong>Remediation\u003C/strong> — Identify and fix real-world issues through feedback\u003C/li>\n\u003C/ul>\n\u003Cp>The goal: a sustainable feedback loop where everyone benefits.\u003C/p>\n\u003Ch3>Building the Accesserty Brand\u003C/h3>\n\u003Cp>Many a11y tools try to scare developers into action — with stories of lawsuits or million-dollar fines.\u003C/p>\n\u003Cp>I didn’t want to do that.\u003Cbr>Instead, I wanted to design something that felt \u003Cstrong>rational, respectful, and constructive\u003C/strong>.\u003C/p>\n\u003Cp>So with help from my “product manager” (aka ChatGPT 😎), I defined Accesserty’s brand principles:\u003C/p>\n\u003Cp>We aim to be…\u003Cstrong>Calm, clear, transparent, inclusive\u003C/strong>\u003C/p>\n\u003Cp>And we avoid…\u003Cstrong>Fear-driven messaging, tokenism, accessibility as an afterthought\u003C/strong>\u003C/p>\n\u003Cfigure>\u003Cimg alt=\"\" src=\"https://cdn-images-1.medium.com/max/1024/1*Z14tBChoEsgMU1wsRjk44A.png\">\u003Cfigcaption>I even used ChatGPT’s new project folder mode to keep a shared background doc, flowcharts, and multiple conversations — as if working with a real team.\u003C/figcaption>\u003C/figure>\u003Cp>With the structure aligned, I started coding the actual tools — one by one — with the help of Chrome Extension, Web Components, AppSheet, and some Vibe Coding.\u003C/p>\n\u003Ch3>The Accesserty Ecosystem\u003C/h3>\n\u003Cul>\n\u003Cli>\n\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-signal/jabgpbgdmhdmibhogmcjfinnkcngcelc\">\u003Cstrong>Accesserty Signal\u003C/strong>\u003C/a>\u003Cbr> See accessibility status directly in Google Search\u003C/li>\n\u003Cli>\n\u003Ca href=\"https://chromewebstore.google.com/detail/accesserty-devcheck/ompbhahmipenipgiiiehbkiibkonoeec?pli=1\">\u003Cstrong>Accesserty DevCheck\u003C/strong>\u003C/a>\u003Cbr> Simulate vision impairments, detect violations (e.g., color blindness, alt text, heading issues)\u003C/li>\n\u003Cli>\n\u003Ca href=\"https://github.com/Accesserty/UI-Kit\">\u003Cstrong>Accesserty UI Kit\u003C/strong>\u003C/a>\u003Cbr> Build with accessible Web Components from day one\u003C/li>\n\u003Cli>\n\u003Cstrong>Accesserty Console\u003C/strong>\u003Cbr> An AppSheet-based CRM to manage feedback, assign issues, and close the loop\u003C/li>\n\u003C/ul>\n\u003Cp>Built solo, with AI as a thought partner, and designed for low-maintenance sustainability.\u003C/p>\n\u003Ch3>Launched on GAAD 🎉\u003C/h3>\n\u003Cp>I chose to launch Accesserty on \u003Cstrong>Global Accessibility Awareness Day (GAAD)\u003C/strong> — \u003Cbr>the third Thursday of May, every year.\u003C/p>\n\u003Cp>You can find it on Product Hunt here:\u003Cbr> 👉 \u003Ca href=\"https://www.producthunt.com/posts/accesserty\">Accesserty on Product Hunt\u003C/a>\u003C/p>\n\u003Ca href=\"https://medium.com/media/70a825e44a04dea081e0e037488e66be/href\">https://medium.com/media/70a825e44a04dea081e0e037488e66be/href\u003C/a>\u003Cp>My hope is that this helps show:\u003C/p>\n\u003Cblockquote>You don’t need a big team or budget to make the web more accessible.\u003Cbr>With the right mindset and tools, transparency and improvement can happen — at scale, and with care.\u003C/blockquote>\n\u003Cp>If you’ve ever felt unsure which site to trust when searching, or if you’ve ever hit an accessibility wall and had nowhere to report it — \u003Cbr>Accesserty was built for you.\u003C/p>\n\u003Cp>I’d love to hear your thoughts, feedback, or even ideas for collaboration.\u003C/p>\n\u003Ch3>Related Links\u003C/h3>\n\u003Cp>\u003Ca href=\"https://accessibility.day/\">GAAD\u003C/a>\u003C/p>\n\u003Cimg src=\"https://medium.com/_/stat?event=post.clientViewed&amp;referrerSource=full_rss&amp;postId=ea7ef4ad4b8b\" width=\"1\" height=\"1\" alt=\"\">\n",{},[44,21,45,23,46],"product-hunt","solo-founder","webdev",1753891050386]